//------------------------------------------------------------------------------ 
// <auto-generated> 
// This code was generated by the lingu compiler compiler. 
// from file: 'Lingu.Grammar' DO NOT EDIT! 
// 
// Changes to this file may cause incorrect behavior and will be lost if 
// the code is regenerated. 
// </auto-generated> 
//------------------------------------------------------------------------------

namespace Lingu.CC
{
    using Lingu.Runtime.Commons;
    using Lingu.Runtime.Concretes;
    using Lingu.Runtime.Structures;
    
    public class LinguContext : Lingu.Runtime.Concretes.LinguContext
    {
        public LinguContext()
            : base(symbols, productions, CreateParseTable(), CreateDfaSet())
        {
        }
        public static IDfaSet CreateDfaSet()
        {
            byte[] bytes = 
            {
                163,44,0,2,190,2,1,160,3,1,1,2,3,4,4,4,4,4,4,3,3,3,4,1,5,6,6,5,5,7,7,6,6,8,6,6,8,5,4,2,2,6,4,9,9,9,6,4,10,10,10,11,11,11,12,12,9,9,9,9,
                13,13,13,13,13,13,13,9,13,13,2,14,14,15,16,11,12,12,17,10,10,10,10,10,16,16,16,18,10,16,16,19,16,16,19,20,5,5,6,12,9,9,9,9,9,8,13,13,21,
                22,22,15,15,15,15,23,23,23,23,23,23,23,15,23,23,2,14,14,15,6,12,10,24,10,25,10,10,10,26,10,27,21,22,22,28,20,20,20,20,20,27,27,27,18,20,
                27,27,29,27,27,29,20,9,12,30,30,30,13,22,15,15,15,15,15,8,23,23,21,10,12,31,12,24,24,24,24,24,31,31,31,18,24,31,31,32,31,31,32,20,33,16,
                16,16,16,22,20,34,20,25,20,20,20,26,20,21,12,35,36,36,30,30,30,30,37,37,37,37,37,37,37,30,37,37,2,14,14,15,15,22,30,23,12,24,25,24,24,
                24,26,24,21,35,25,20,22,38,22,34,34,34,34,34,38,38,38,18,34,38,38,39,38,38,39,20,33,27,27,27,27,13,36,30,30,30,30,30,8,37,37,21,22,35,
                33,31,31,31,31,10,35,22,34,25,34,34,34,26,34,21,35,30,36,30,37,23,35,33,38,38,38,38,20,36,35,24,35,37,34,57,1,103,103,1,114,114,1,97,97,
                1,109,109,3,65,90,95,95,97,122,4,48,57,65,90,95,95,97,122,1,123,123,1,111,111,1,116,116,1,125,125,1,112,112,1,105,105,1,110,110,1,115,
                115,1,117,117,1,108,108,1,101,101,1,83,83,1,99,99,1,61,61,1,45,45,1,58,58,1,62,62,1,39,39,1,40,40,1,44,44,1,59,59,1,94,94,1,124,124,3,
                1,115,38,40,91,93,255,255,67,1,92,92,9,39,39,48,48,92,92,97,98,102,102,110,110,114,114,116,116,118,118,3,48,57,65,70,97,102,1,46,46,5,
                65,84,86,90,95,95,97,116,118,122,2,85,85,117,117,1,43,43,1,98,98,2,65,90,97,122,3,32,32,45,45,95,95,3,48,57,65,90,97,122,1,42,42,1,63,
                63,1,41,41,1,48,48,1,49,57,1,48,57,4,9,13,32,32,133,1,133,1,168,64,169,64,1,47,47,6,1,31,9,11,12,14,46,48,132,1,134,1,167,64,170,64,255,
                255,67,4,10,10,13,13,133,1,133,1,168,64,169,64,7,1,20,9,11,12,14,41,43,46,48,132,1,134,1,167,64,170,64,255,255,67,7,1,20,8,14,31,33,41,
                43,46,48,132,1,134,1,167,64,170,64,255,255,67,3,1,8,41,43,46,48,255,255,67,2,1,6,41,43,255,255,67,2,1,12,46,48,255,255,67,2,42,42,47,47,
                41,8,14,3,1,8,1,1,19,1,1,1,2,1,2,3,1,3,4,1,3,5,1,2,6,1,1,7,1,3,1,1,30,1,1,2,2,9,1,1,1,4,1,1,5,1,2,2,5,1,9,1,6,1,1,1,23,14,2,1,11,8,2,1,
                16,16,31,1,25,1,10,4,7,1,1,8,8,13,9,22,1,10,2,1,8,3,1,11,4,1,7,5,1,12,6,1,13,7,1,12,1,14,9,1,15,10,1,16,11,1,13,12,1,24,1,16,14,1,1,15,
                1,3,16,1,11,17,1,12,18,1,2,19,1,15,20,1,13,21,2,1,13,14,2,1,15,6,27,1,12,1,10,2,17,1,9,12,2,10,2,8,8,1,2,3,1,18,4,1,11,5,1,12,6,1,1,1,
                7,1,9,1,2,9,1,1,10,1,8,11,2,1,3,2,12,1,1,1,10,2,4,1,9,2,1,5,1,1,1,2,2,5,1,13,1,19,1,1,1,4,4,12,1,29,1,28,2,20,1,21,3,1,22,2,2,1,20,6,2,
                1,4,18,43,1,23,1,21,1,14,1,1,1,22,1,9,1,17,8,23,1,24,13,25,14,26,15,4,16,27,17,6,18,28,19,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,
                5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,3,3,1,5,16,3,1,46,6,2,1,4,18,12,1,23,1,26,1,3,1,14,1,1,
                1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,33,1,17,9,23,1,24,13,20,14,33,15,26,16,34,17,35,18,30,26,28,45,2,29,2,30,4,3,29,2,
                23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,4,26,1,5,17,2,36,19,5,17,1,32,
                20,1,32,21,1,32,22,1,32,23,1,32,24,1,32,25,1,28,1,14,27,3,37,28,18,33,6,38,1,6,29,1,38,30,3,39,31,40,30,9,32,2,39,31,40,30,1,18,1,6,34,
                1,38,35,3,39,36,40,35,9,37,2,39,36,40,35,1,31,1,32,39,2,32,40,9,25,2,32,41,9,25,2,32,42,9,25,2,32,43,9,25,2,32,44,9,25,1,9,25,1,1,2,2,
                5,1,14,1,26,1,1,1,3,2,9,1,14,1,17,2,26,1,28,2,2,1,23,6,2,1,4,18,55,1,23,1,19,1,20,1,21,1,14,1,18,1,1,1,22,1,9,1,17,11,23,1,24,13,41,14,
                36,15,25,16,26,17,42,18,4,19,27,20,6,21,28,22,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,
                9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,6,3,1,5,19,3,1,16,6,2,1,4,18,27,1,23,1,1,1,9,4,23,1,24,13,4,14,6,15,2,29,2,30,4,3,29,2,23,3,30,4,1,39,
                2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,1,3,1,5,14,1,1,20,6,2,1,4,18,43,1,23,1,24,1,21,
                1,1,1,22,1,9,1,17,8,23,1,24,13,43,14,25,15,4,16,27,17,6,18,28,19,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,
                2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,3,3,1,5,16,3,1,50,6,2,1,4,18,18,1,23,1,19,1,20,1,26,1,3,1,14,1,18,1,1,1,1,2,12,1,
                7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,43,1,9,1,17,13,23,1,24,13,41,14,36,15,20,16,33,17,26,18,42,19,34,20,35,21,30,29,6,48,28,49,2,
                29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,7,26,1,5,20,2,
                36,22,5,20,1,32,23,1,32,24,1,32,25,1,32,26,1,32,27,1,32,28,1,28,1,14,30,3,37,31,18,36,6,41,1,6,32,1,38,33,3,39,34,40,33,9,35,2,39,34,40,
                33,1,18,1,6,37,1,38,38,3,39,39,40,38,9,40,2,39,39,40,38,1,31,1,32,42,2,32,43,9,28,2,32,44,9,28,2,32,45,9,28,2,32,46,9,28,2,32,47,9,28,
                1,9,28,2,1,4,2,13,1,26,1,14,1,17,3,20,1,26,2,28,3,3,1,3,4,8,1,27,1,33,1,1,33,2,1,1,51,6,2,1,4,18,20,1,23,1,19,1,20,1,26,1,3,1,27,1,14,
                1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,43,1,9,1,17,13,23,1,24,13,41,14,36,15,20,16,33,17,26,19,42,20,34,21,35,22,
                30,30,6,49,28,50,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,
                1,9,2,4,3,1,33,18,3,26,1,5,21,2,36,23,5,21,1,32,24,1,32,25,1,32,26,1,32,27,1,32,28,1,32,29,1,28,1,14,31,3,37,32,18,37,6,42,1,6,33,1,38,
                34,3,39,35,40,34,9,36,2,39,35,40,34,1,18,1,6,38,1,38,39,3,39,40,40,39,9,41,2,39,40,40,39,1,31,1,32,43,2,32,44,9,29,2,32,45,9,29,2,32,46,
                9,29,2,32,47,9,29,2,32,48,9,29,1,9,29,2,1,46,6,2,1,4,18,12,1,23,1,24,1,26,1,3,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,
                33,1,17,9,23,1,24,13,43,14,20,15,33,16,34,17,35,18,30,26,28,45,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,
                32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,4,26,1,5,17,2,36,19,5,17,1,32,20,1,32,21,1,32,22,1,32,23,1,32,24,1,32,25,1,28,1,14,
                27,3,37,28,18,33,6,38,1,6,29,1,38,30,3,39,31,40,30,9,32,2,39,31,40,30,1,18,1,6,34,1,38,35,3,39,36,40,35,9,37,2,39,36,40,35,1,31,1,32,39,
                2,32,40,9,25,2,32,41,9,25,2,32,42,9,25,2,32,43,9,25,2,32,44,9,25,1,9,25,1,1,2,2,5,1,24,1,43,1,1,1,3,2,9,1,24,1,17,2,43,1,28,2,2,1,23,6,
                2,1,4,18,55,1,23,1,24,1,19,1,20,1,21,1,18,1,1,1,22,1,9,1,17,11,23,1,24,13,43,14,41,15,36,16,25,17,42,18,4,19,27,20,6,21,28,22,2,29,2,30,
                4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,6,3,1,5,19,3,1,45,6,2,
                1,4,18,10,1,23,1,3,1,14,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,31,1,17,8,23,1,24,13,33,14,26,15,34,16,35,17,30,25,28,
                44,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,3,26,1,5,
                16,2,36,18,5,16,1,32,19,1,32,20,1,32,21,1,32,22,1,32,23,1,32,24,1,28,1,14,26,3,37,27,18,32,6,37,1,6,28,1,38,29,3,39,30,40,29,9,31,2,39,
                30,40,29,1,18,1,6,33,1,38,34,3,39,35,40,34,9,36,2,39,35,40,34,1,31,1,32,38,2,32,39,9,24,2,32,40,9,24,2,32,41,9,24,2,32,42,9,24,2,32,43,
                9,24,1,9,24,1,1,3,2,9,1,2,1,2,2,44,1,45,2,1,4,1,46,2,30,6,2,1,4,22,12,1,7,1,7,1,7,1,7,1,7,1,7,18,19,3,23,1,35,13,30,21,2,29,2,30,4,3,29,
                2,23,3,30,4,1,60,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,1,36,14,1,32,15,1,32,16,1,32,
                17,1,32,18,1,32,19,1,32,20,1,38,1,14,22,1,6,23,1,32,24,2,32,25,9,20,2,32,26,9,20,2,32,27,9,20,2,32,28,9,20,2,32,29,9,20,1,9,20,50,6,2,
                1,4,18,18,1,23,1,24,1,19,1,20,1,26,1,3,1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,43,1,9,1,17,13,23,1,24,13,43,14,41,
                15,36,16,20,17,33,18,42,19,34,20,35,21,30,29,6,48,28,49,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,
                2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,7,26,1,5,20,2,36,22,5,20,1,32,23,1,32,24,1,32,25,1,32,26,1,32,27,1,32,28,1,28,1,14,30,3,37,
                31,18,36,6,41,1,6,32,1,38,33,3,39,34,40,33,9,35,2,39,34,40,33,1,18,1,6,37,1,38,38,3,39,39,40,38,9,40,2,39,39,40,38,1,31,1,32,42,2,32,43,
                9,28,2,32,44,9,28,2,32,45,9,28,2,32,46,9,28,2,32,47,9,28,1,9,28,2,1,4,2,13,1,24,1,26,1,17,3,43,1,20,2,28,3,3,1,51,6,2,1,4,18,20,1,23,1,
                24,1,19,1,20,1,26,1,3,1,27,1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,43,1,9,1,17,13,23,1,24,13,43,14,41,15,36,16,20,
                17,33,18,42,20,34,21,35,22,30,30,6,49,28,50,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,
                2,2,32,11,9,2,2,32,12,9,2,1,9,2,5,3,1,33,19,2,26,1,5,21,2,36,23,5,21,1,32,24,1,32,25,1,32,26,1,32,27,1,32,28,1,32,29,1,28,1,14,31,3,37,
                32,18,37,6,42,1,6,33,1,38,34,3,39,35,40,34,9,36,2,39,35,40,34,1,18,1,6,38,1,38,39,3,39,40,40,39,9,41,2,39,40,40,39,1,31,1,32,43,2,32,44,
                9,29,2,32,45,9,29,2,32,46,9,29,2,32,47,9,29,2,32,48,9,29,1,9,29,2,1,20,6,2,1,4,18,43,1,23,1,21,1,1,1,22,1,9,1,17,1,10,8,23,1,24,13,25,
                14,4,15,27,16,6,17,28,18,9,19,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,
                2,32,12,9,2,1,9,2,2,3,1,5,15,4,1,49,6,2,1,4,18,16,1,23,1,19,1,20,1,3,1,14,1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,
                41,1,9,1,17,12,23,1,24,13,41,14,36,15,33,16,26,17,42,18,34,19,35,20,30,28,6,47,28,48,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,
                6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,6,26,1,5,19,2,36,21,5,19,1,32,22,1,32,23,1,32,24,1,32,25,1,32,
                26,1,32,27,1,28,1,14,29,3,37,30,18,35,6,40,1,6,31,1,38,32,3,39,33,40,32,9,34,2,39,33,40,32,1,18,1,6,36,1,38,37,3,39,38,40,37,9,39,2,39,
                38,40,37,1,31,1,32,41,2,32,42,9,27,2,32,43,9,27,2,32,44,9,27,2,32,45,9,27,2,32,46,9,27,1,9,27,2,1,50,6,2,1,4,18,18,1,23,1,19,1,20,1,3,
                1,27,1,14,1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,41,1,9,1,17,12,23,1,24,13,41,14,36,15,33,16,26,18,42,19,34,20,
                35,21,30,29,6,48,28,49,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,
                9,2,1,9,2,3,3,1,33,17,3,26,1,5,20,2,36,22,5,20,1,32,23,1,32,24,1,32,25,1,32,26,1,32,27,1,32,28,1,28,1,14,30,3,37,31,18,36,6,41,1,6,32,
                1,38,33,3,39,34,40,33,9,35,2,39,34,40,33,1,18,1,6,37,1,38,38,3,39,39,40,38,9,40,2,39,39,40,38,1,31,1,32,42,2,32,43,9,28,2,32,44,9,28,2,
                32,45,9,28,2,32,46,9,28,2,32,47,9,28,1,9,28,2,1,3,2,9,1,21,1,10,2,25,1,9,2,2,1,45,6,2,1,4,18,10,1,23,1,24,1,3,1,1,1,1,2,12,1,7,1,7,1,7,
                1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,31,1,17,8,23,1,24,13,43,14,33,15,34,16,35,17,30,25,28,44,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,
                1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,3,26,1,5,16,2,36,18,5,16,1,32,19,1,32,20,1,32,21,1,32,22,
                1,32,23,1,32,24,1,28,1,14,26,3,37,27,18,32,6,37,1,6,28,1,38,29,3,39,30,40,29,9,31,2,39,30,40,29,1,18,1,6,33,1,38,34,3,39,35,40,34,9,36,
                2,39,35,40,34,1,31,1,32,38,2,32,39,9,24,2,32,40,9,24,2,32,41,9,24,2,32,42,9,24,2,32,43,9,24,1,9,24,1,1,2,2,5,1,10,1,9,1,1,1,3,2,9,1,17,
                1,10,2,28,1,9,2,2,1,23,6,2,1,4,18,55,1,23,1,19,1,20,1,21,1,18,1,1,1,22,1,9,1,17,1,10,11,23,1,24,13,41,14,36,15,25,16,42,17,4,18,27,19,
                6,20,28,21,9,22,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,
                9,2,5,3,1,5,18,4,1,49,6,2,1,4,18,16,1,23,1,24,1,19,1,20,1,3,1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,41,1,9,1,17,
                12,23,1,24,13,43,14,41,15,36,16,33,17,42,18,34,19,35,20,30,28,6,47,28,48,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,
                32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,6,26,1,5,19,2,36,21,5,19,1,32,22,1,32,23,1,32,24,1,32,25,1,32,26,1,32,27,
                1,28,1,14,29,3,37,30,18,35,6,40,1,6,31,1,38,32,3,39,33,40,32,9,34,2,39,33,40,32,1,18,1,6,36,1,38,37,3,39,38,40,37,9,39,2,39,38,40,37,1,
                31,1,32,41,2,32,42,9,27,2,32,43,9,27,2,32,44,9,27,2,32,45,9,27,2,32,46,9,27,1,9,27,2,1,50,6,2,1,4,18,18,1,23,1,24,1,19,1,20,1,3,1,27,1,
                18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,41,1,9,1,17,12,23,1,24,13,43,14,41,15,36,16,33,17,42,19,34,20,35,21,30,29,
                6,48,28,49,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,
                4,3,1,33,18,2,26,1,5,20,2,36,22,5,20,1,32,23,1,32,24,1,32,25,1,32,26,1,32,27,1,32,28,1,28,1,14,30,3,37,31,18,36,6,41,1,6,32,1,38,33,3,
                39,34,40,33,9,35,2,39,34,40,33,1,18,1,6,37,1,38,38,3,39,39,40,38,9,40,2,39,39,40,38,1,31,1,32,42,2,32,43,9,28,2,32,44,9,28,2,32,45,9,28,
                2,32,46,9,28,2,32,47,9,28,1,9,28,2,2,12,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,1,1,1,2,2,47,1,11,48,1,2,48,2,41,9,3,49,2,50,1,6,48,3,4,51,2,
                50,1,50,48,3,41,4,4,41,5,50,6,51,4,48,11,3,49,4,50,6,48,3,4,47,6,48,7,52,9,41,10,3,48,4,41,8,53,9,3,53,9,41,8,48,6,2,54,9,41,10,2,48,1,
                9,55,9,3,51,4,50,6,56,11,
            };
            
            return new CompactDfaReader(new BinReader(new CompressReader().Uncompress(bytes))).Read();
        }
        
        public static IParseTable CreateParseTable()
        {
            byte[] bytes = 
            {
                179,52,0,5,190,2,30,79,83,7,1,1,51,2,1,1,37,1,1,30,3,214,1,1,4,1,5,8,1,9,14,2,1,1,4,1,1,8,1,1,14,2,17,1,4,1,5,8,1,9,14,2,186,1,1,1,1,2,
                1,5,15,1,1,8,2,182,1,20,1,1,8,2,222,1,29,1,1,1,1,1,2,1,1,24,1,37,1,1,1,2,1,5,27,1,1,17,1,1,8,1,1,20,1,1,8,1,37,47,2,1,5,1,1,1,8,1,45,20,
                1,1,2,1,5,4,1,9,4,1,74,2,1,74,3,3,13,17,21,7,1,1,2,1,1,4,1,1,4,1,1,2,1,1,3,3,1,1,1,7,1,1,1,5,5,9,13,17,21,6,1,42,2,1,42,5,1,25,2,1,42,
                4,1,1,1,5,1,1,1,1,1,6,1,1,2,1,1,5,1,1,2,1,1,17,1,1,29,1,1,2,1,68,26,1,1,2,1,1,13,1,1,2,1,1,4,1,1,4,1,1,2,10,1,176,2,180,2,184,2,1,1,1,
                7,1,1,2,1,1,4,1,1,4,1,1,2,7,1,1,1,1,1,1,1,7,2,188,1,2,2,192,1,4,2,196,1,4,1,1,2,1,1,3,6,200,1,204,1,208,1,7,1,1,2,1,5,4,1,9,13,1,21,7,
                2,148,1,2,2,152,1,4,2,156,1,7,1,1,3,7,160,1,164,1,168,1,1,6,1,1,1,5,1,1,1,1,1,1,1,1,4,1,1,2,4,1,1,1,1,2,1,1,2,1,1,17,1,1,2,2,140,1,26,
                1,1,2,1,1,8,2,224,2,4,1,1,1,5,1,1,1,1,1,1,2,200,2,4,1,1,2,7,1,204,2,208,2,212,2,2,1,1,2,1,1,30,1,1,3,2,168,1,1,10,172,1,176,1,180,1,184,
                1,188,1,6,1,1,2,1,1,5,2,192,1,2,1,1,4,1,1,1,5,1,1,1,1,1,1,1,1,4,1,1,2,4,1,1,1,1,2,1,1,2,2,1,33,3,1,1,1,5,1,1,1,1,1,1,1,1,4,1,1,2,4,1,1,
                1,1,2,1,1,2,2,1,21,3,2,224,1,1,10,228,1,232,1,236,1,240,1,244,1,9,1,1,5,3,248,1,1,1,1,1,17,1,1,2,2,188,4,36,1,1,22,2,216,2,6,1,1,22,1,
                1,6,1,1,6,1,1,2,1,1,4,1,1,7,1,1,3,4,1,1,1,1,6,1,1,2,1,1,4,1,1,7,11,1,196,4,200,4,204,4,1,1,1,1,6,1,1,2,1,1,4,1,1,7,8,1,1,1,1,1,1,1,1,6,
                2,152,3,2,2,156,3,4,2,160,3,7,1,1,3,7,164,3,168,3,172,3,1,19,1,1,2,2,156,4,13,2,244,2,1,10,248,2,252,2,128,3,132,3,136,3,6,1,1,2,1,1,5,
                2,140,3,8,1,1,31,1,1,2,1,5,23,1,1,1,5,1,1,1,1,1,1,1,1,7,4,1,1,1,1,2,2,1,1,1,1,1,20,2,180,3,6,1,1,22,1,1,6,1,1,1,2,136,5,4,1,1,1,5,1,1,
                1,1,1,9,1,1,5,2,1,1,1,1,1,4,1,1,1,5,1,1,1,1,1,1,2,240,4,7,7,1,244,4,248,4,252,4,2,2,1,1,1,1,1,4,2,176,3,1,10,180,3,184,3,188,3,192,3,196,
                3,9,1,1,5,3,200,3,1,1,1,1,4,1,1,1,5,1,1,1,1,1,1,1,1,7,4,1,1,1,1,2,2,1,1,1,2,1,33,3,1,1,1,5,1,1,1,1,1,1,1,1,7,4,1,1,1,1,2,2,1,1,1,2,1,21,
                3,2,196,4,2,2,200,4,4,3,204,4,1,6,1,1,3,6,208,4,212,4,216,4,7,1,1,2,1,1,4,2,1,1,6,1,1,3,3,1,1,1,23,2,232,6,6,1,1,6,1,1,1,5,1,1,1,1,1,1,
                1,1,4,1,1,2,4,1,1,1,1,2,1,1,7,1,1,1,5,1,1,1,1,1,6,1,1,2,1,1,5,1,1,7,1,1,1,5,1,1,1,1,1,1,2,252,5,4,1,1,2,7,1,128,6,132,6,136,6,2,1,1,7,
                2,196,4,1,10,200,4,204,4,208,4,212,4,216,4,6,1,1,2,1,1,5,2,220,4,7,1,1,1,5,1,1,1,1,1,1,1,1,4,1,1,2,4,1,1,1,1,2,1,1,3,1,33,3,1,1,1,5,1,
                1,1,1,1,1,1,1,4,1,1,2,4,1,1,1,1,2,1,1,3,1,21,12,1,1,10,2,216,4,25,2,196,6,6,1,1,6,2,156,5,1,10,160,5,164,5,168,5,172,5,176,5,9,1,1,5,3,
                180,5,1,15,1,1,29,1,1,6,2,148,6,22,1,1,6,1,1,13,1,1,2,1,1,4,2,1,1,6,10,1,128,8,132,8,136,8,1,1,1,7,1,1,2,1,1,4,2,1,1,6,7,1,1,1,1,1,1,1,
                7,2,200,6,2,2,204,6,4,3,208,6,1,6,1,1,3,6,212,6,216,6,220,6,7,1,1,1,5,1,1,1,1,1,1,1,1,7,4,1,1,1,1,2,2,1,1,6,1,1,1,5,1,1,1,1,1,9,1,1,5,
                2,1,1,6,1,1,1,5,1,1,1,1,1,1,2,224,7,7,7,1,228,7,232,7,236,7,2,2,1,1,6,2,236,6,1,10,240,6,244,6,248,6,252,6,128,7,9,1,1,5,3,132,7,1,6,1,
                1,1,5,1,1,1,1,1,1,1,1,7,4,1,1,1,1,2,2,1,1,2,1,33,3,1,1,1,5,1,1,1,1,1,1,1,1,7,4,1,1,1,1,2,2,1,1,2,1,21,12,1,1,6,2,132,9,13,3,51,1,5,98,
                2,1,5,1,1,9,15,1,13,15,1,17,13,2,29,1,1,1,5,15,1,9,31,1,1,33,1,5,16,1,1,32,1,5,31,1,1,21,1,5,8,1,1,50,1,1,82,1,1,30,1,1,71,1,1,10,14,1,
                5,9,13,17,21,25,29,33,37,41,45,49,53,21,1,57,26,1,1,2,9,5,9,13,17,21,25,29,33,37,1,4,41,45,49,53,10,1,57,42,1,1,17,12,189,1,1,5,9,13,17,
                21,25,29,33,37,45,5,169,1,1,5,9,45,5,173,1,1,5,9,74,1,1,34,1,1,36,1,1,6,6,133,2,25,29,33,37,1,4,41,45,49,53,20,14,177,3,1,5,9,13,17,21,
                25,29,33,37,41,45,21,1,49,49,1,1,15,12,245,1,1,5,9,13,17,21,25,29,33,37,45,5,225,1,1,5,9,45,5,229,1,1,5,9,35,15,145,2,1,5,9,13,17,21,25,
                29,33,37,41,45,49,21,1,53,26,1,1,3,9,165,3,13,17,21,25,29,33,37,1,4,41,45,49,53,10,1,57,21,1,1,5,6,5,9,13,17,21,25,1,4,29,33,37,41,10,
                1,45,37,1,1,32,1,1,6,6,165,2,25,29,33,37,1,4,41,45,49,53,32,1,1,2,10,169,2,9,13,17,21,25,29,33,37,1,4,41,45,49,53,10,1,57,9,14,129,5,1,
                5,9,13,17,21,25,29,33,37,41,45,21,1,49,14,14,129,4,1,5,9,13,17,21,25,29,33,37,41,45,21,1,49,26,1,1,3,9,157,5,13,17,21,25,29,33,37,1,4,
                41,45,49,53,10,1,57,21,1,1,6,6,145,2,13,17,21,25,1,4,29,33,37,41,32,1,1,2,10,181,3,9,13,17,21,25,29,33,37,1,4,41,45,49,53,10,1,57,49,1,
                1,20,1,1,3,9,197,3,13,17,21,25,29,33,37,1,4,41,45,49,53,10,1,57,11,12,129,2,1,5,9,13,17,21,25,29,33,37,45,5,237,1,1,5,9,45,5,241,1,1,5,
                9,35,15,205,5,1,5,9,13,17,21,25,29,33,37,41,45,49,21,1,53,14,14,205,5,1,5,9,13,17,21,25,29,33,37,41,45,21,1,49,13,15,165,2,1,5,9,13,17,
                21,25,29,33,37,41,45,49,21,1,53,26,1,1,3,9,249,4,13,17,21,25,29,33,37,1,4,41,45,49,53,10,1,57,21,1,1,6,6,205,1,13,17,21,25,1,4,29,33,37,
                41,32,1,1,2,10,153,5,9,13,17,21,25,29,33,37,1,4,41,45,49,53,10,1,57,9,14,237,2,1,5,9,13,17,21,25,29,33,37,41,45,21,1,49,14,14,153,3,1,
                5,9,13,17,21,25,29,33,37,41,45,21,1,49,13,15,161,3,1,5,9,13,17,21,25,29,33,37,41,45,49,21,1,53,6,1,13,1,1,5,2,1,1,1,3,1,6,1,1,3,1,17,2,
                1,3,1,21,3,1,8,1,45,4,25,2,254,1,5,1,3,1,14,5,1,3,1,18,5,1,3,1,22,5,1,7,1,45,6,29,3,65,3,1,3,1,69,3,1,3,1,73,3,1,4,1,250,1,5,1,3,1,10,
                1,1,16,1,85,7,77,4,101,8,93,5,113,9,105,6,138,2,10,1,7,1,85,11,117,7,125,12,1,4,1,129,1,12,1,4,1,150,2,13,1,15,1,101,14,133,1,8,145,1,
                15,141,1,9,202,2,13,1,15,1,113,16,153,1,10,165,1,15,161,1,11,134,2,10,1,3,1,26,5,1,4,1,173,1,2,1,4,1,177,1,2,1,4,1,146,2,13,1,3,1,38,5,
                1,10,1,241,1,17,181,1,12,158,2,18,1,4,1,162,2,18,1,4,1,198,2,13,1,4,1,134,1,5,1,10,1,197,2,19,137,2,13,210,2,20,1,4,1,214,2,20,1,4,1,225,
                2,21,1,4,1,229,2,21,1,4,1,233,2,21,1,9,1,174,2,22,237,2,14,50,23,1,4,1,182,2,18,1,3,1,58,18,1,3,1,62,18,1,3,1,66,18,1,3,1,70,24,1,3,1,
                86,25,1,3,1,90,25,1,3,1,94,25,1,3,1,106,25,1,3,1,114,25,1,3,1,122,25,1,9,1,54,26,197,1,15,130,1,25,1,3,1,126,25,1,4,1,133,3,2,1,22,1,241,
                1,27,225,1,16,241,1,27,225,1,17,186,2,28,145,3,12,234,1,29,1,4,1,229,3,21,1,10,1,226,2,30,233,3,18,150,1,23,1,4,1,146,1,31,1,4,1,234,2,
                20,1,4,1,162,1,20,1,4,1,166,1,20,1,4,1,170,1,20,1,4,1,174,1,20,1,10,1,178,1,32,245,3,19,202,1,29,1,4,1,218,1,29,1,4,1,137,4,33,1,10,1,
                158,1,34,137,2,20,130,1,29,1,4,1,210,1,29,1,4,1,214,1,35,1,4,1,226,1,29,1,4,1,230,1,29,1,4,1,222,1,36,1,9,1,238,2,37,145,4,13,30,10,1,
                3,1,34,10,1,3,1,42,13,1,3,1,46,38,1,9,1,241,1,17,189,1,21,74,18,1,3,1,78,18,1,3,1,82,18,1,4,1,178,2,18,1,9,1,245,4,15,241,4,22,98,25,1,
                3,1,102,25,1,4,1,253,4,39,1,9,1,174,2,40,129,5,14,50,41,1,4,1,182,2,42,1,3,1,58,42,1,3,1,62,42,1,3,1,66,42,1,3,1,70,43,1,3,1,86,44,1,3,
                1,90,44,1,3,1,94,44,1,3,1,106,44,1,3,1,114,44,1,3,1,122,44,1,9,1,54,45,161,3,23,130,1,44,1,3,1,126,44,1,4,1,153,5,2,1,22,1,205,3,27,189,
                3,24,205,3,27,189,3,25,186,2,28,149,3,26,138,1,13,1,4,1,142,1,46,1,16,1,197,2,19,137,2,27,238,2,47,177,5,28,194,1,20,1,4,1,253,5,48,1,
                4,1,182,1,20,1,4,1,186,1,20,1,4,1,190,1,20,1,10,1,133,6,49,129,6,29,230,2,20,1,4,1,234,1,50,1,4,1,141,6,39,1,10,1,226,2,51,145,6,18,150,
                1,41,1,4,1,146,1,52,1,4,1,234,2,53,1,4,1,162,1,53,1,4,1,166,1,53,1,4,1,170,1,53,1,4,1,174,1,53,1,10,1,178,1,54,157,6,19,202,1,50,1,4,1,
                218,1,50,1,4,1,177,6,33,1,10,1,158,1,55,145,4,30,130,1,50,1,4,1,210,1,50,1,4,1,214,1,56,1,4,1,226,1,50,1,4,1,230,1,50,1,4,1,222,1,57,1,
                16,1,238,2,37,145,4,31,241,1,17,189,1,32,170,2,23,1,10,1,186,2,58,193,6,12,190,2,59,1,4,1,194,2,59,1,3,1,110,25,1,3,1,46,60,1,9,1,186,
                2,28,153,3,33,74,42,1,3,1,78,42,1,3,1,82,42,1,4,1,178,2,42,1,9,1,245,4,15,157,7,22,98,44,1,3,1,102,44,1,4,1,161,7,39,1,10,1,197,2,19,137,
                2,34,222,2,23,1,4,1,234,1,61,1,4,1,154,1,23,1,4,1,234,2,62,1,4,1,162,1,62,1,4,1,166,1,62,1,4,1,170,1,62,1,4,1,174,1,62,1,10,1,178,1,63,
                169,7,19,202,1,61,1,4,1,218,1,61,1,4,1,189,7,33,1,10,1,158,1,64,177,5,35,130,1,61,1,4,1,210,1,61,1,4,1,214,1,65,1,4,1,226,1,61,1,4,1,230,
                1,61,1,4,1,222,1,66,1,16,1,238,2,37,145,4,36,246,2,67,201,7,37,238,1,29,1,4,1,246,1,29,1,4,1,242,1,29,1,4,1,206,1,29,1,4,1,142,1,68,1,
                16,1,238,2,37,145,4,38,238,2,69,217,7,28,194,1,53,1,4,1,165,8,48,1,4,1,182,1,53,1,4,1,186,1,53,1,4,1,190,1,53,1,10,1,173,8,49,169,8,29,
                230,2,53,1,4,1,181,8,39,1,4,1,166,2,23,1,4,1,185,8,70,1,9,1,174,2,71,189,8,14,50,72,1,4,1,182,2,59,1,3,1,58,59,1,3,1,62,59,1,3,1,66,59,
                1,3,1,70,73,1,3,1,86,74,1,3,1,90,74,1,3,1,94,74,1,3,1,106,74,1,3,1,114,74,1,3,1,122,74,1,9,1,54,75,209,6,39,130,1,74,1,3,1,126,74,1,4,
                1,213,8,2,1,28,1,253,6,27,237,6,40,253,6,27,237,6,41,186,2,28,149,3,42,186,2,28,153,3,43,170,2,41,1,9,1,186,2,58,197,6,44,110,44,1,4,1,
                218,2,23,1,4,1,194,1,62,1,4,1,237,8,48,1,4,1,182,1,62,1,4,1,186,1,62,1,4,1,190,1,62,1,10,1,245,8,49,241,8,29,230,2,62,1,4,1,253,8,39,1,
                4,1,129,9,70,1,4,1,133,9,48,1,10,1,238,2,37,145,4,45,222,2,41,1,4,1,234,1,76,1,4,1,154,1,41,1,4,1,234,2,77,1,4,1,162,1,77,1,4,1,166,1,
                77,1,4,1,170,1,77,1,4,1,174,1,77,1,10,1,178,1,78,141,9,19,202,1,76,1,4,1,218,1,76,1,4,1,161,9,33,1,10,1,158,1,79,217,7,46,130,1,76,1,4,
                1,210,1,76,1,4,1,214,1,80,1,4,1,226,1,76,1,4,1,230,1,76,1,4,1,222,1,81,1,16,1,238,2,37,145,4,47,246,2,67,173,9,37,238,1,50,1,4,1,246,1,
                50,1,4,1,242,1,50,1,4,1,206,1,50,1,3,1,118,25,1,3,1,46,82,1,9,1,186,2,58,201,6,48,74,59,1,3,1,78,59,1,3,1,82,59,1,4,1,178,2,59,1,9,1,245,
                4,15,185,9,22,98,74,1,3,1,102,74,1,4,1,189,9,39,1,4,1,166,2,41,1,4,1,193,9,70,1,10,1,246,2,67,197,9,37,238,1,61,1,4,1,246,1,61,1,4,1,242,
                1,61,1,4,1,206,1,61,1,4,1,198,1,20,1,4,1,242,2,70,1,4,1,218,2,41,1,4,1,194,1,77,1,4,1,201,9,48,1,4,1,182,1,77,1,4,1,186,1,77,1,4,1,190,
                1,77,1,10,1,209,9,49,205,9,29,230,2,77,1,4,1,217,9,39,1,4,1,221,9,70,1,10,1,186,2,58,201,6,49,170,2,72,1,9,1,186,2,58,197,6,50,110,74,
                1,3,1,118,44,1,4,1,233,9,70,1,10,1,246,2,67,237,9,37,238,1,76,1,4,1,246,1,76,1,4,1,242,1,76,1,4,1,206,1,76,1,4,1,198,1,53,1,4,1,166,2,
                72,1,4,1,241,9,70,1,4,1,198,1,62,1,4,1,245,9,70,1,3,1,118,74,1,4,1,198,1,77,1,1,1,
            };
            
            return new CompactTableReader(new BinReader(new CompressReader().Uncompress(bytes))).Read();
        }
        
        public static readonly TerminalSymbol identifier = new TerminalSymbol(0, "identifier", true, "");
        public static readonly TerminalSymbol number = new TerminalSymbol(1, "number", true, "");
        public static readonly TerminalSymbol any = new TerminalSymbol(2, "any", true, "");
        public static readonly TerminalSymbol text = new TerminalSymbol(3, "text", true, "");
        public static readonly TerminalSymbol ucBlock = new TerminalSymbol(4, "ucBlock", true, "");
        public static readonly TerminalSymbol ucCategory = new TerminalSymbol(5, "ucCategory", true, "");
        public static readonly TerminalSymbol ucCodepoint = new TerminalSymbol(6, "ucCodepoint", true, "");
        public static readonly TerminalSymbol __T1 = new TerminalSymbol(7, "__T1", false, "grammar");
        public static readonly TerminalSymbol __T2 = new TerminalSymbol(8, "__T2", false, "{");
        public static readonly TerminalSymbol __T3 = new TerminalSymbol(9, "__T3", false, "}");
        public static readonly TerminalSymbol __T4 = new TerminalSymbol(10, "__T4", false, "options");
        public static readonly TerminalSymbol __T5 = new TerminalSymbol(11, "__T5", true, "Start");
        public static readonly TerminalSymbol __T6 = new TerminalSymbol(12, "__T6", false, "=");
        public static readonly TerminalSymbol __T7 = new TerminalSymbol(13, "__T7", false, ";");
        public static readonly TerminalSymbol __T8 = new TerminalSymbol(14, "__T8", true, "Spacing");
        public static readonly TerminalSymbol __T9 = new TerminalSymbol(15, "__T9", false, "rules");
        public static readonly TerminalSymbol __T10 = new TerminalSymbol(16, "__T10", false, "|");
        public static readonly TerminalSymbol __T11 = new TerminalSymbol(17, "__T11", true, "?");
        public static readonly TerminalSymbol __T12 = new TerminalSymbol(18, "__T12", true, "*");
        public static readonly TerminalSymbol __T13 = new TerminalSymbol(19, "__T13", true, "+");
        public static readonly TerminalSymbol __T14 = new TerminalSymbol(20, "__T14", false, ",");
        public static readonly TerminalSymbol __T15 = new TerminalSymbol(21, "__T15", false, "^");
        public static readonly TerminalSymbol __T16 = new TerminalSymbol(22, "__T16", false, "(");
        public static readonly TerminalSymbol __T17 = new TerminalSymbol(23, "__T17", false, ")");
        public static readonly TerminalSymbol __T18 = new TerminalSymbol(24, "__T18", false, "terminals");
        public static readonly TerminalSymbol __T19 = new TerminalSymbol(25, "__T19", false, "-");
        public static readonly TerminalSymbol __T20 = new TerminalSymbol(26, "__T20", false, "..");
        public static readonly TerminalSymbol __T21 = new TerminalSymbol(27, "__T21", true, ":");
        public static readonly TerminalSymbol __T22 = new TerminalSymbol(28, "__T22", true, "->");
        public static readonly TerminalSymbol __eof = new TerminalSymbol(29, "__eof", false, "$eof$");
        public static readonly NonterminalSymbol file = new NonterminalSymbol(30, "file", false, RepeatKind.None);
        public static readonly NonterminalSymbol angrammar = new NonterminalSymbol(31, "angrammar", false, RepeatKind.None);
        public static readonly NonterminalSymbol grammar_item = new NonterminalSymbol(32, "grammar_item", false, RepeatKind.None);
        public static readonly NonterminalSymbol grammar_options = new NonterminalSymbol(33, "grammar_options", false, RepeatKind.None);
        public static readonly NonterminalSymbol option = new NonterminalSymbol(34, "option", false, RepeatKind.None);
        public static readonly NonterminalSymbol grammar_rules = new NonterminalSymbol(35, "grammar_rules", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule = new NonterminalSymbol(36, "rule", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_expression = new NonterminalSymbol(37, "rule_expression", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_alternative = new NonterminalSymbol(38, "rule_alternative", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_sequence = new NonterminalSymbol(39, "rule_sequence", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_repetition = new NonterminalSymbol(40, "rule_repetition", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_option = new NonterminalSymbol(41, "rule_option", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_star = new NonterminalSymbol(42, "rule_star", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_plus = new NonterminalSymbol(43, "rule_plus", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_tree_action = new NonterminalSymbol(44, "rule_tree_action", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_drop = new NonterminalSymbol(45, "rule_drop", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_promote = new NonterminalSymbol(46, "rule_promote", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_primary = new NonterminalSymbol(47, "rule_primary", false, RepeatKind.None);
        public static readonly NonterminalSymbol sub_rule = new NonterminalSymbol(48, "sub_rule", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_atom = new NonterminalSymbol(49, "rule_atom", false, RepeatKind.None);
        public static readonly NonterminalSymbol reference = new NonterminalSymbol(50, "reference", false, RepeatKind.None);
        public static readonly NonterminalSymbol grammar_terminals = new NonterminalSymbol(51, "grammar_terminals", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_rule = new NonterminalSymbol(52, "terminal_rule", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_expression = new NonterminalSymbol(53, "terminal_expression", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_alternative = new NonterminalSymbol(54, "terminal_alternative", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_diff = new NonterminalSymbol(55, "terminal_diff", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_sequence = new NonterminalSymbol(56, "terminal_sequence", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_repetition = new NonterminalSymbol(57, "terminal_repetition", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_option = new NonterminalSymbol(58, "terminal_option", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_star = new NonterminalSymbol(59, "terminal_star", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_plus = new NonterminalSymbol(60, "terminal_plus", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_range_loop = new NonterminalSymbol(61, "terminal_range_loop", false, RepeatKind.None);
        public static readonly NonterminalSymbol range = new NonterminalSymbol(62, "range", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_element = new NonterminalSymbol(63, "terminal_element", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_atom = new NonterminalSymbol(64, "terminal_atom", false, RepeatKind.None);
        public static readonly NonterminalSymbol characterRange = new NonterminalSymbol(65, "characterRange", false, RepeatKind.None);
        public static readonly NonterminalSymbol character = new NonterminalSymbol(66, "character", false, RepeatKind.None);
        public static readonly NonterminalSymbol __N1 = new NonterminalSymbol(67, "__N1", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N2 = new NonterminalSymbol(68, "__N2", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N3 = new NonterminalSymbol(69, "__N3", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N4 = new NonterminalSymbol(70, "__N4", false, RepeatKind.None);
        public static readonly NonterminalSymbol __N5 = new NonterminalSymbol(71, "__N5", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N6 = new NonterminalSymbol(72, "__N6", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N7 = new NonterminalSymbol(73, "__N7", false, RepeatKind.None);
        public static readonly NonterminalSymbol __N8 = new NonterminalSymbol(74, "__N8", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N9 = new NonterminalSymbol(75, "__N9", false, RepeatKind.None);
        public static readonly NonterminalSymbol __N10 = new NonterminalSymbol(76, "__N10", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N11 = new NonterminalSymbol(77, "__N11", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N12 = new NonterminalSymbol(78, "__N12", false, RepeatKind.Optional);
        public static readonly TerminalSymbol newline = new TerminalSymbol(79, "newline", false, "");
        public static readonly TerminalSymbol newlineChar = new TerminalSymbol(80, "newlineChar", false, "");
        public static readonly TerminalSymbol whitespace = new TerminalSymbol(81, "whitespace", false, "");
        public static readonly TerminalSymbol lineComment = new TerminalSymbol(82, "lineComment", false, "");
        public static readonly TerminalSymbol blockComment = new TerminalSymbol(83, "blockComment", false, "");
        public static readonly TerminalSymbol spacing = new TerminalSymbol(84, "spacing", false, "");
        public static readonly TerminalSymbol identifierStart = new TerminalSymbol(85, "identifierStart", false, "");
        public static readonly TerminalSymbol identifierContinue = new TerminalSymbol(86, "identifierContinue", false, "");
        public static readonly TerminalSymbol digit = new TerminalSymbol(87, "digit", false, "");
        public static readonly TerminalSymbol nonzeroDigit = new TerminalSymbol(88, "nonzeroDigit", false, "");
        public static readonly TerminalSymbol zero = new TerminalSymbol(89, "zero", false, "");
        public static readonly TerminalSymbol hexDigit = new TerminalSymbol(90, "hexDigit", false, "");
        public static readonly TerminalSymbol escapes = new TerminalSymbol(91, "escapes", false, "");
        public static readonly TerminalSymbol ucNameStart = new TerminalSymbol(92, "ucNameStart", false, "");
        public static readonly TerminalSymbol ucNameInner = new TerminalSymbol(93, "ucNameInner", false, "");
        public static readonly TerminalSymbol ucNameEnd = new TerminalSymbol(94, "ucNameEnd", false, "");
        public static readonly TerminalSymbol ucName = new TerminalSymbol(95, "ucName", false, "");
        public static readonly NonterminalSymbol __acc = new NonterminalSymbol(96, "__acc", true, RepeatKind.None);
        
        private static readonly Symbol[] symbols = 
        {
            identifier,number,any,text,ucBlock,ucCategory,ucCodepoint,__T1,__T2,__T3,__T4,__T5,__T6,__T7,__T8,__T9,__T10,__T11,__T12,__T13,__T14,__T15,
            __T16,__T17,__T18,__T19,__T20,__T21,__T22,__eof,file,angrammar,grammar_item,grammar_options,option,grammar_rules,rule,rule_expression,rule_alternative,
            rule_sequence,rule_repetition,rule_option,rule_star,rule_plus,rule_tree_action,rule_drop,rule_promote,rule_primary,sub_rule,rule_atom,reference,
            grammar_terminals,terminal_rule,terminal_expression,terminal_alternative,terminal_diff,terminal_sequence,terminal_repetition,terminal_option,
            terminal_star,terminal_plus,terminal_range_loop,range,terminal_element,terminal_atom,characterRange,character,__N1,__N2,__N3,__N4,__N5,__N6,
            __N7,__N8,__N9,__N10,__N11,__N12,newline,newlineChar,whitespace,lineComment,blockComment,spacing,identifierStart,identifierContinue,digit,
            nonzeroDigit,zero,hexDigit,escapes,ucNameStart,ucNameInner,ucNameEnd,ucName,__acc,
        };
        
        private static readonly Production[] productions = 
        {
            new Production(__acc, "file", new bool[]{false}, new bool[]{false}),
            new Production(file, "angrammar", new bool[]{false}, new bool[]{false}),
            new Production(angrammar, ",'grammar' ˈidentifierˈ ,'{' __N1 ,'}'", new bool[]{true,false,true,false,true}, new bool[]{false,false,false,false,false}),
            new Production(grammar_item, "^grammar_options", new bool[]{false}, new bool[]{true}),
            new Production(grammar_item, "^grammar_rules", new bool[]{false}, new bool[]{true}),
            new Production(grammar_item, "^grammar_terminals", new bool[]{false}, new bool[]{true}),
            new Production(grammar_options, ",'options' ,'{' __N2 ,'}'", new bool[]{true,true,false,true}, new bool[]{false,false,false,false}),
            new Production(option, "'Start' ,'=' ˈidentifierˈ ,';'", new bool[]{false,true,false,true}, new bool[]{false,false,false,false}),
            new Production(option, "'Spacing' ,'=' ˈidentifierˈ ,';'", new bool[]{false,true,false,true}, new bool[]{false,false,false,false}),
            new Production(grammar_rules, ",'rules' ,'{' __N3 ,'}'", new bool[]{true,true,false,true}, new bool[]{false,false,false,false}),
            new Production(rule, "ˈidentifierˈ ,__N4 rule_expression ,';'", new bool[]{false,true,false,true}, new bool[]{false,false,false,false}),
            new Production(rule_expression, "rule_alternative __N5", new bool[]{false,false}, new bool[]{false,false}),
            new Production(rule_alternative, "^rule_sequence", new bool[]{false}, new bool[]{true}),
            new Production(rule_sequence, "__N6", new bool[]{false}, new bool[]{false}),
            new Production(rule_repetition, "^rule_option", new bool[]{false}, new bool[]{true}),
            new Production(rule_repetition, "^rule_star", new bool[]{false}, new bool[]{true}),
            new Production(rule_repetition, "^rule_plus", new bool[]{false}, new bool[]{true}),
            new Production(rule_repetition, "^rule_tree_action", new bool[]{false}, new bool[]{true}),
            new Production(rule_option, "rule_tree_action ,'?'", new bool[]{false,true}, new bool[]{false,false}),
            new Production(rule_star, "rule_tree_action ,'*'", new bool[]{false,true}, new bool[]{false,false}),
            new Production(rule_plus, "rule_tree_action ,'+'", new bool[]{false,true}, new bool[]{false,false}),
            new Production(rule_tree_action, "^rule_drop", new bool[]{false}, new bool[]{true}),
            new Production(rule_tree_action, "^rule_promote", new bool[]{false}, new bool[]{true}),
            new Production(rule_tree_action, "^rule_primary", new bool[]{false}, new bool[]{true}),
            new Production(rule_drop, ",',' rule_primary", new bool[]{true,false}, new bool[]{false,false}),
            new Production(rule_promote, ",'^' rule_primary", new bool[]{true,false}, new bool[]{false,false}),
            new Production(rule_primary, "^sub_rule", new bool[]{false}, new bool[]{true}),
            new Production(rule_primary, ",'(' ^rule_expression ,')'", new bool[]{true,false,true}, new bool[]{false,true,false}),
            new Production(rule_primary, "^rule_atom", new bool[]{false}, new bool[]{true}),
            new Production(sub_rule, ",'{' ˈidentifierˈ ,__N7 rule_expression ,'}'", new bool[]{true,false,true,false,true}, new bool[]{false,false,false,false,false}),
            new Production(rule_atom, "^reference", new bool[]{false}, new bool[]{true}),
            new Production(rule_atom, "^ˈtextˈ", new bool[]{false}, new bool[]{true}),
            new Production(reference, "^ˈidentifierˈ", new bool[]{false}, new bool[]{true}),
            new Production(grammar_terminals, ",'terminals' ,'{' __N8 ,'}'", new bool[]{true,true,false,true}, new bool[]{false,false,false,false}),
            new Production(terminal_rule, "ˈidentifierˈ ,__N9 terminal_expression ,';'", new bool[]{false,true,false,true}, new bool[]{false,false,false,false}),
            new Production(terminal_expression, "terminal_alternative __N10", new bool[]{false,false}, new bool[]{false,false}),
            new Production(terminal_alternative, "^terminal_sequence", new bool[]{false}, new bool[]{true}),
            new Production(terminal_alternative, "^terminal_diff", new bool[]{false}, new bool[]{true}),
            new Production(terminal_diff, "terminal_sequence ,'-' terminal_sequence", new bool[]{false,true,false}, new bool[]{false,false,false}),
            new Production(terminal_sequence, "__N11", new bool[]{false}, new bool[]{false}),
            new Production(terminal_repetition, "^terminal_option", new bool[]{false}, new bool[]{true}),
            new Production(terminal_repetition, "^terminal_star", new bool[]{false}, new bool[]{true}),
            new Production(terminal_repetition, "^terminal_plus", new bool[]{false}, new bool[]{true}),
            new Production(terminal_repetition, "^terminal_range_loop", new bool[]{false}, new bool[]{true}),
            new Production(terminal_repetition, "^terminal_element", new bool[]{false}, new bool[]{true}),
            new Production(terminal_option, "terminal_element '?'", new bool[]{false,false}, new bool[]{false,false}),
            new Production(terminal_star, "terminal_element '*'", new bool[]{false,false}, new bool[]{false,false}),
            new Production(terminal_plus, "terminal_element '+'", new bool[]{false,false}, new bool[]{false,false}),
            new Production(terminal_range_loop, "terminal_element range", new bool[]{false,false}, new bool[]{false,false}),
            new Production(range, ",'{' ˈnumberˈ __N12 ,'}'", new bool[]{true,false,false,true}, new bool[]{false,false,false,false}),
            new Production(terminal_element, "^terminal_atom", new bool[]{false}, new bool[]{true}),
            new Production(terminal_element, ",'(' ^terminal_expression ,')'", new bool[]{true,false,true}, new bool[]{false,true,false}),
            new Production(terminal_atom, "^ˈanyˈ", new bool[]{false}, new bool[]{true}),
            new Production(terminal_atom, "^ˈtextˈ", new bool[]{false}, new bool[]{true}),
            new Production(terminal_atom, "^characterRange", new bool[]{false}, new bool[]{true}),
            new Production(terminal_atom, "^ˈucCodepointˈ", new bool[]{false}, new bool[]{true}),
            new Production(terminal_atom, "^ˈucBlockˈ", new bool[]{false}, new bool[]{true}),
            new Production(terminal_atom, "^ˈucCategoryˈ", new bool[]{false}, new bool[]{true}),
            new Production(terminal_atom, "^reference", new bool[]{false}, new bool[]{true}),
            new Production(characterRange, "character ,'..' character", new bool[]{false,true,false}, new bool[]{false,false,false}),
            new Production(character, "^ˈucCodepointˈ", new bool[]{false}, new bool[]{true}),
            new Production(character, "^ˈtextˈ", new bool[]{false}, new bool[]{true}),
            new Production(__N1, "__N1 grammar_item", new bool[]{false,false}, new bool[]{false,false}),
            new Production(__N1, "grammar_item", new bool[]{false}, new bool[]{false}),
            new Production(__N1, "", new bool[]{}, new bool[]{}),
            new Production(__N2, "__N2 option", new bool[]{false,false}, new bool[]{false,false}),
            new Production(__N2, "option", new bool[]{false}, new bool[]{false}),
            new Production(__N2, "", new bool[]{}, new bool[]{}),
            new Production(__N3, "__N3 rule", new bool[]{false,false}, new bool[]{false,false}),
            new Production(__N3, "rule", new bool[]{false}, new bool[]{false}),
            new Production(__N3, "", new bool[]{}, new bool[]{}),
            new Production(__N4, "':'", new bool[]{false}, new bool[]{false}),
            new Production(__N4, "'->'", new bool[]{false}, new bool[]{false}),
            new Production(__N5, "__N5 ,'|' rule_alternative", new bool[]{false,true,false}, new bool[]{false,false,false}),
            new Production(__N5, ",'|' rule_alternative", new bool[]{true,false}, new bool[]{false,false}),
            new Production(__N5, "", new bool[]{}, new bool[]{}),
            new Production(__N6, "__N6 rule_repetition", new bool[]{false,false}, new bool[]{false,false}),
            new Production(__N6, "rule_repetition", new bool[]{false}, new bool[]{false}),
            new Production(__N6, "", new bool[]{}, new bool[]{}),
            new Production(__N7, "':'", new bool[]{false}, new bool[]{false}),
            new Production(__N7, "'->'", new bool[]{false}, new bool[]{false}),
            new Production(__N8, "__N8 terminal_rule", new bool[]{false,false}, new bool[]{false,false}),
            new Production(__N8, "terminal_rule", new bool[]{false}, new bool[]{false}),
            new Production(__N8, "", new bool[]{}, new bool[]{}),
            new Production(__N9, "':'", new bool[]{false}, new bool[]{false}),
            new Production(__N9, "'->'", new bool[]{false}, new bool[]{false}),
            new Production(__N10, "__N10 ,'|' terminal_alternative", new bool[]{false,true,false}, new bool[]{false,false,false}),
            new Production(__N10, ",'|' terminal_alternative", new bool[]{true,false}, new bool[]{false,false}),
            new Production(__N10, "", new bool[]{}, new bool[]{}),
            new Production(__N11, "__N11 terminal_repetition", new bool[]{false,false}, new bool[]{false,false}),
            new Production(__N11, "terminal_repetition", new bool[]{false}, new bool[]{false}),
            new Production(__N11, "", new bool[]{}, new bool[]{}),
            new Production(__N12, ",',' ˈnumberˈ", new bool[]{true,false}, new bool[]{false,false}),
            new Production(__N12, "", new bool[]{}, new bool[]{}),
        };
    }
}
