//------------------------------------------------------------------------------ 
// <auto-generated> 
// This code was generated by the lingu compiler compiler. 
// from file: 'Lingu.Grammar' DO NOT EDIT! 
// 
// Changes to this file may cause incorrect behavior and will be lost if 
// the code is regenerated. 
// </auto-generated> 
//------------------------------------------------------------------------------

namespace Lingu.CC
{
    using Lingu.Runtime.Commons;
    using Lingu.Runtime.Concretes;
    using Lingu.Runtime.Structures;
    
    public class LinguContext : Lingu.Runtime.Concretes.LinguContext
    {
        public LinguContext()
            : base(symbols, productions, CreateParseTable(), CreateDfaSet())
        {
        }
        public static IDfaSet CreateDfaSet()
        {
            byte[] bytes = 
            {
                244,46,0,2,199,2,1,169,3,1,1,2,3,4,4,4,4,4,4,3,3,3,4,1,5,6,6,5,5,7,7,6,6,8,6,6,8,5,4,2,2,6,4,9,9,9,6,4,10,10,10,11,11,11,12,9,9,9,9,13,
                13,13,13,13,13,13,9,13,13,2,14,14,15,16,11,12,17,10,10,10,10,10,16,16,16,16,18,12,10,16,16,19,16,16,19,20,21,5,5,6,12,9,9,9,9,9,8,13,13,
                22,23,15,15,15,15,24,24,24,24,24,24,24,15,24,24,2,14,14,15,6,12,10,25,10,26,10,10,10,27,10,28,22,23,29,20,20,20,20,20,28,28,28,28,18,23,
                20,28,28,30,28,28,30,20,21,16,9,12,31,31,31,13,23,15,15,15,15,15,8,24,24,22,10,12,32,12,25,25,25,25,25,32,32,32,32,18,25,32,32,33,32,32,
                33,20,21,34,16,16,16,16,23,20,35,20,26,20,20,20,27,20,22,28,12,36,37,31,31,31,31,38,38,38,38,38,38,38,31,38,38,2,14,14,15,15,23,31,24,
                12,25,26,25,25,25,27,25,22,32,36,26,20,23,39,23,35,35,35,35,35,39,39,39,39,18,35,39,39,40,39,39,40,20,21,34,28,28,28,28,13,37,31,31,31,
                31,31,8,38,38,22,23,36,34,32,32,32,32,10,36,23,35,26,35,35,35,27,35,22,39,36,31,37,31,38,24,36,34,39,39,39,39,20,37,36,25,36,38,35,58,
                1,103,103,1,114,114,1,97,97,1,109,109,3,65,90,95,95,97,122,4,48,57,65,90,95,95,97,122,1,123,123,1,111,111,1,116,116,1,125,125,1,112,112,
                1,105,105,1,110,110,1,115,115,1,117,117,1,108,108,1,101,101,1,83,83,1,99,99,1,61,61,1,45,45,1,58,58,1,62,62,1,39,39,1,40,40,1,44,44,1,
                59,59,1,94,94,1,124,124,3,1,118,38,40,91,93,255,255,67,1,92,92,9,39,39,48,48,92,92,97,98,102,102,110,110,114,114,116,116,118,118,3,48,
                57,65,70,97,102,1,46,46,5,65,84,86,90,95,95,97,116,118,122,2,85,85,117,117,1,126,126,1,43,43,1,98,98,2,65,90,97,122,3,32,32,45,45,95,95,
                3,48,57,65,90,97,122,1,42,42,1,63,63,1,41,41,1,48,48,1,49,57,1,48,57,4,9,13,32,32,133,1,133,1,168,64,169,64,1,47,47,6,1,31,9,11,12,14,
                46,48,132,1,134,1,167,64,170,64,255,255,67,4,10,10,13,13,133,1,133,1,168,64,169,64,7,1,20,9,11,12,14,41,43,46,48,132,1,134,1,167,64,170,
                64,255,255,67,7,1,20,8,14,31,33,41,43,46,48,132,1,134,1,167,64,170,64,255,255,67,3,1,8,41,43,46,48,255,255,67,2,1,6,41,43,255,255,67,2,
                1,12,46,48,255,255,67,2,42,42,47,47,42,8,14,3,1,8,1,1,19,1,1,1,2,1,2,3,1,3,4,1,3,5,1,2,6,1,1,7,1,3,1,1,31,1,1,2,2,9,1,1,1,4,1,1,5,1,2,
                2,5,1,9,1,6,1,1,1,23,14,2,1,11,8,2,1,16,16,31,1,25,1,10,4,7,1,1,8,8,13,9,22,1,10,2,1,8,3,1,11,4,1,7,5,1,12,6,1,13,7,1,12,1,14,9,1,15,10,
                1,16,11,1,13,12,1,24,1,16,14,1,1,15,1,3,16,1,11,17,1,12,18,1,2,19,1,15,20,1,13,21,2,1,13,14,2,1,15,6,27,1,12,1,10,2,17,1,9,12,2,10,2,8,
                8,1,2,3,1,18,4,1,11,5,1,12,6,1,1,1,7,1,9,1,2,9,1,1,10,1,8,11,2,1,3,2,12,1,1,1,10,2,4,1,9,2,1,5,1,1,1,2,2,5,1,13,1,19,1,1,1,4,4,12,1,29,
                1,28,2,20,1,21,3,1,22,2,2,1,20,6,2,1,4,18,43,1,23,1,21,1,14,1,1,1,22,1,9,1,17,8,23,1,24,13,25,14,26,15,4,16,27,17,6,18,28,19,2,29,2,30,
                4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,3,3,1,5,16,3,1,47,6,2,
                1,4,18,12,1,23,1,30,1,3,1,14,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,37,1,17,1,26,10,23,1,24,13,20,14,33,15,26,16,34,
                17,35,18,30,26,28,45,36,46,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,
                32,12,9,2,1,9,2,4,26,1,5,17,2,37,19,5,17,1,32,20,1,32,21,1,32,22,1,32,23,1,32,24,1,32,25,1,28,1,14,27,3,38,28,18,33,6,38,1,6,29,1,39,30,
                3,40,31,41,30,9,32,2,40,31,41,30,1,18,1,6,34,1,39,35,3,40,36,41,35,9,37,2,40,36,41,35,1,31,1,32,39,2,32,40,9,25,2,32,41,9,25,2,32,42,9,
                25,2,32,43,9,25,2,32,44,9,25,1,9,25,2,1,2,2,5,1,14,1,26,1,1,1,3,2,9,1,14,1,17,2,26,1,28,2,2,1,23,6,2,1,4,18,55,1,23,1,19,1,20,1,21,1,14,
                1,18,1,1,1,22,1,9,1,17,11,23,1,24,13,42,14,37,15,25,16,26,17,43,18,4,19,27,20,6,21,28,22,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,
                1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,6,3,1,5,19,3,1,16,6,2,1,4,18,27,1,23,1,1,1,9,4,23,1,24,13,
                4,14,6,15,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,1,
                3,1,5,14,1,1,20,6,2,1,4,18,43,1,23,1,24,1,21,1,1,1,22,1,9,1,17,8,23,1,24,13,44,14,25,15,4,16,27,17,6,18,28,19,2,29,2,30,4,3,29,2,23,3,
                30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,3,3,1,5,16,3,1,51,6,2,1,4,18,18,1,23,
                1,19,1,20,1,30,1,3,1,14,1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,47,1,9,1,17,1,26,14,23,1,24,13,42,14,37,15,20,16,
                33,17,26,18,43,19,34,20,35,21,30,29,6,48,28,49,36,50,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,
                2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,7,26,1,5,20,2,37,22,5,20,1,32,23,1,32,24,1,32,25,1,32,26,1,32,27,1,32,28,1,28,1,14,30,3,38,31,
                18,36,6,41,1,6,32,1,39,33,3,40,34,41,33,9,35,2,40,34,41,33,1,18,1,6,37,1,39,38,3,40,39,41,38,9,40,2,40,39,41,38,1,31,1,32,42,2,32,43,9,
                28,2,32,44,9,28,2,32,45,9,28,2,32,46,9,28,2,32,47,9,28,1,9,28,3,1,4,2,13,1,30,1,14,1,17,3,20,1,26,2,28,3,3,1,3,4,8,1,27,1,33,1,1,33,2,
                1,1,52,6,2,1,4,18,20,1,23,1,19,1,20,1,30,1,3,1,27,1,14,1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,47,1,9,1,17,1,26,
                14,23,1,24,13,42,14,37,15,20,16,33,17,26,19,43,20,34,21,35,22,30,30,6,49,28,50,36,51,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,
                6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,4,3,1,33,18,3,26,1,5,21,2,37,23,5,21,1,32,24,1,32,25,1,32,26,
                1,32,27,1,32,28,1,32,29,1,28,1,14,31,3,38,32,18,37,6,42,1,6,33,1,39,34,3,40,35,41,34,9,36,2,40,35,41,34,1,18,1,6,38,1,39,39,3,40,40,41,
                39,9,41,2,40,40,41,39,1,31,1,32,43,2,32,44,9,29,2,32,45,9,29,2,32,46,9,29,2,32,47,9,29,2,32,48,9,29,1,9,29,3,1,47,6,2,1,4,18,12,1,23,1,
                24,1,30,1,3,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,37,1,17,1,26,10,23,1,24,13,44,14,20,15,33,16,34,17,35,18,30,26,28,
                45,36,46,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,4,
                26,1,5,17,2,37,19,5,17,1,32,20,1,32,21,1,32,22,1,32,23,1,32,24,1,32,25,1,28,1,14,27,3,38,28,18,33,6,38,1,6,29,1,39,30,3,40,31,41,30,9,
                32,2,40,31,41,30,1,18,1,6,34,1,39,35,3,40,36,41,35,9,37,2,40,36,41,35,1,31,1,32,39,2,32,40,9,25,2,32,41,9,25,2,32,42,9,25,2,32,43,9,25,
                2,32,44,9,25,1,9,25,2,1,44,6,2,1,4,18,8,1,23,1,3,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,29,1,26,7,23,1,24,13,33,14,34,
                15,35,16,30,24,36,43,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,
                9,2,1,9,2,2,26,1,5,15,2,37,17,5,15,1,32,18,1,32,19,1,32,20,1,32,21,1,32,22,1,32,23,1,28,1,14,25,3,38,26,18,31,6,36,1,6,27,1,39,28,3,40,
                29,41,28,9,30,2,40,29,41,28,1,18,1,6,32,1,39,33,3,40,34,41,33,9,35,2,40,34,41,33,1,31,1,32,37,2,32,38,9,23,2,32,39,9,23,2,32,40,9,23,2,
                32,41,9,23,2,32,42,9,23,1,9,23,1,1,2,2,5,1,24,1,44,1,1,1,3,2,9,1,24,1,17,2,44,1,28,2,2,1,23,6,2,1,4,18,55,1,23,1,24,1,19,1,20,1,21,1,18,
                1,1,1,22,1,9,1,17,11,23,1,24,13,44,14,42,15,37,16,25,17,43,18,4,19,27,20,6,21,28,22,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,
                6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,6,3,1,5,19,3,1,46,6,2,1,4,18,10,1,23,1,3,1,14,1,1,1,1,2,12,1,
                7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,35,1,17,1,26,9,23,1,24,13,33,14,26,15,34,16,35,17,30,25,28,44,36,45,2,29,2,30,4,3,29,2,23,3,
                30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,3,26,1,5,16,2,37,18,5,16,1,32,19,1,
                32,20,1,32,21,1,32,22,1,32,23,1,32,24,1,28,1,14,26,3,38,27,18,32,6,37,1,6,28,1,39,29,3,40,30,41,29,9,31,2,40,30,41,29,1,18,1,6,33,1,39,
                34,3,40,35,41,34,9,36,2,40,35,41,34,1,31,1,32,38,2,32,39,9,24,2,32,40,9,24,2,32,41,9,24,2,32,42,9,24,2,32,43,9,24,1,9,24,2,1,3,2,9,1,2,
                1,2,2,45,1,46,2,1,4,1,47,2,30,6,2,1,4,22,12,1,7,1,7,1,7,1,7,1,7,1,7,18,19,3,23,1,35,13,30,21,2,29,2,30,4,3,29,2,23,3,30,4,1,60,2,31,2,
                14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,1,37,14,1,32,15,1,32,16,1,32,17,1,32,18,1,32,19,1,32,
                20,1,38,1,14,22,1,6,23,1,32,24,2,32,25,9,20,2,32,26,9,20,2,32,27,9,20,2,32,28,9,20,2,32,29,9,20,1,9,20,51,6,2,1,4,18,18,1,23,1,24,1,19,
                1,20,1,30,1,3,1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,47,1,9,1,17,1,26,14,23,1,24,13,44,14,42,15,37,16,20,17,33,
                18,43,19,34,20,35,21,30,29,6,48,28,49,36,50,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,
                2,2,32,11,9,2,2,32,12,9,2,1,9,2,7,26,1,5,20,2,37,22,5,20,1,32,23,1,32,24,1,32,25,1,32,26,1,32,27,1,32,28,1,28,1,14,30,3,38,31,18,36,6,
                41,1,6,32,1,39,33,3,40,34,41,33,9,35,2,40,34,41,33,1,18,1,6,37,1,39,38,3,40,39,41,38,9,40,2,40,39,41,38,1,31,1,32,42,2,32,43,9,28,2,32,
                44,9,28,2,32,45,9,28,2,32,46,9,28,2,32,47,9,28,1,9,28,3,1,4,2,13,1,24,1,30,1,17,3,44,1,20,2,28,3,3,1,52,6,2,1,4,18,20,1,23,1,24,1,19,1,
                20,1,30,1,3,1,27,1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,47,1,9,1,17,1,26,14,23,1,24,13,44,14,42,15,37,16,20,17,
                33,18,43,20,34,21,35,22,30,30,6,49,28,50,36,51,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,
                9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,5,3,1,33,19,2,26,1,5,21,2,37,23,5,21,1,32,24,1,32,25,1,32,26,1,32,27,1,32,28,1,32,29,1,28,1,14,31,3,
                38,32,18,37,6,42,1,6,33,1,39,34,3,40,35,41,34,9,36,2,40,35,41,34,1,18,1,6,38,1,39,39,3,40,40,41,39,9,41,2,40,40,41,39,1,31,1,32,43,2,32,
                44,9,29,2,32,45,9,29,2,32,46,9,29,2,32,47,9,29,2,32,48,9,29,1,9,29,3,1,20,6,2,1,4,18,43,1,23,1,21,1,1,1,22,1,9,1,17,1,10,8,23,1,24,13,
                25,14,4,15,27,16,6,17,28,18,9,19,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,
                9,2,2,32,12,9,2,1,9,2,2,3,1,5,15,4,1,50,6,2,1,4,18,16,1,23,1,19,1,20,1,3,1,14,1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,
                6,14,45,1,9,1,17,1,26,13,23,1,24,13,42,14,37,15,33,16,26,17,43,18,34,19,35,20,30,28,6,47,28,48,36,49,2,29,2,30,4,3,29,2,23,3,30,4,1,39,
                2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,6,26,1,5,19,2,37,21,5,19,1,32,22,1,32,23,1,32,
                24,1,32,25,1,32,26,1,32,27,1,28,1,14,29,3,38,30,18,35,6,40,1,6,31,1,39,32,3,40,33,41,32,9,34,2,40,33,41,32,1,18,1,6,36,1,39,37,3,40,38,
                41,37,9,39,2,40,38,41,37,1,31,1,32,41,2,32,42,9,27,2,32,43,9,27,2,32,44,9,27,2,32,45,9,27,2,32,46,9,27,1,9,27,3,1,51,6,2,1,4,18,18,1,23,
                1,19,1,20,1,3,1,27,1,14,1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,45,1,9,1,17,1,26,13,23,1,24,13,42,14,37,15,33,16,
                26,18,43,19,34,20,35,21,30,29,6,48,28,49,36,50,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,
                9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,3,3,1,33,17,3,26,1,5,20,2,37,22,5,20,1,32,23,1,32,24,1,32,25,1,32,26,1,32,27,1,32,28,1,28,1,14,30,3,
                38,31,18,36,6,41,1,6,32,1,39,33,3,40,34,41,33,9,35,2,40,34,41,33,1,18,1,6,37,1,39,38,3,40,39,41,38,9,40,2,40,39,41,38,1,31,1,32,42,2,32,
                43,9,28,2,32,44,9,28,2,32,45,9,28,2,32,46,9,28,2,32,47,9,28,1,9,28,3,1,3,2,9,1,21,1,10,2,25,1,9,2,2,1,46,6,2,1,4,18,10,1,23,1,24,1,3,1,
                1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,35,1,17,1,26,9,23,1,24,13,44,14,33,15,34,16,35,17,30,25,28,44,36,45,2,29,2,30,4,
                3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,3,26,1,5,16,2,37,18,5,16,
                1,32,19,1,32,20,1,32,21,1,32,22,1,32,23,1,32,24,1,28,1,14,26,3,38,27,18,32,6,37,1,6,28,1,39,29,3,40,30,41,29,9,31,2,40,30,41,29,1,18,1,
                6,33,1,39,34,3,40,35,41,34,9,36,2,40,35,41,34,1,31,1,32,38,2,32,39,9,24,2,32,40,9,24,2,32,41,9,24,2,32,42,9,24,2,32,43,9,24,1,9,24,2,1,
                2,2,5,1,10,1,9,1,1,1,3,2,9,1,17,1,10,2,28,1,9,2,2,1,23,6,2,1,4,18,55,1,23,1,19,1,20,1,21,1,18,1,1,1,22,1,9,1,17,1,10,11,23,1,24,13,42,
                14,37,15,25,16,43,17,4,18,27,19,6,20,28,21,9,22,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,
                10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,5,3,1,5,18,4,1,50,6,2,1,4,18,16,1,23,1,24,1,19,1,20,1,3,1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,
                12,2,1,5,8,2,1,6,14,45,1,9,1,17,1,26,13,23,1,24,13,44,14,42,15,37,16,33,17,43,18,34,19,35,20,30,28,6,47,28,48,36,49,2,29,2,30,4,3,29,2,
                23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,6,26,1,5,19,2,37,21,5,19,1,32,
                22,1,32,23,1,32,24,1,32,25,1,32,26,1,32,27,1,28,1,14,29,3,38,30,18,35,6,40,1,6,31,1,39,32,3,40,33,41,32,9,34,2,40,33,41,32,1,18,1,6,36,
                1,39,37,3,40,38,41,37,9,39,2,40,38,41,37,1,31,1,32,41,2,32,42,9,27,2,32,43,9,27,2,32,44,9,27,2,32,45,9,27,2,32,46,9,27,1,9,27,3,1,51,6,
                2,1,4,18,18,1,23,1,24,1,19,1,20,1,3,1,27,1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,45,1,9,1,17,1,26,13,23,1,24,13,
                44,14,42,15,37,16,33,17,43,19,34,20,35,21,30,29,6,48,28,49,36,50,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,
                2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,4,3,1,33,18,2,26,1,5,20,2,37,22,5,20,1,32,23,1,32,24,1,32,25,1,32,26,1,32,27,1,32,
                28,1,28,1,14,30,3,38,31,18,36,6,41,1,6,32,1,39,33,3,40,34,41,33,9,35,2,40,34,41,33,1,18,1,6,37,1,39,38,3,40,39,41,38,9,40,2,40,39,41,38,
                1,31,1,32,42,2,32,43,9,28,2,32,44,9,28,2,32,45,9,28,2,32,46,9,28,2,32,47,9,28,1,9,28,3,2,12,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,1,1,1,2,
                2,48,1,11,49,1,2,49,2,42,9,3,50,2,51,1,6,49,3,4,52,2,51,1,50,49,3,42,4,4,42,5,51,6,52,4,49,11,3,50,4,51,6,49,3,4,48,6,49,7,53,9,42,10,
                3,49,4,42,8,54,9,3,54,9,42,8,49,6,2,55,9,42,10,2,49,1,9,56,9,3,52,4,51,6,57,11,
            };
            
            return new CompactDfaReader(new BinReader(new CompressReader().Uncompress(bytes))).Read();
        }
        
        public static IParseTable CreateParseTable()
        {
            byte[] bytes = 
            {
                161,55,0,5,199,2,31,80,84,7,1,1,53,2,1,1,38,1,1,31,3,214,1,1,4,1,5,8,1,9,15,2,1,1,4,1,1,8,1,1,15,2,17,1,4,1,5,8,1,9,15,2,186,1,1,1,1,2,
                1,5,16,1,1,8,2,182,1,21,1,1,8,2,222,1,30,1,1,1,1,1,2,1,1,25,1,37,1,1,1,2,1,5,28,1,1,18,1,1,8,1,1,21,1,1,8,1,37,48,2,1,5,2,1,1,8,1,45,21,
                1,1,2,1,5,4,1,9,4,1,78,2,1,78,3,3,13,17,21,8,1,1,2,1,1,4,1,1,4,1,1,2,1,1,3,3,1,1,1,8,1,1,1,5,5,9,13,17,21,6,1,46,2,1,46,5,1,25,2,1,29,
                3,1,46,1,1,1,1,5,1,1,1,1,1,6,1,1,2,1,1,5,1,1,2,1,1,3,1,1,14,1,1,30,1,1,2,1,72,14,1,1,2,1,1,4,1,1,4,1,1,2,10,1,184,2,188,2,192,2,1,1,1,
                8,1,1,2,1,1,4,1,1,4,1,1,2,7,1,1,1,1,1,1,1,8,2,188,1,2,2,192,1,4,2,196,1,4,1,1,2,1,1,3,6,200,1,204,1,208,1,8,1,1,2,1,5,4,1,9,13,1,21,8,
                2,148,1,2,2,152,1,4,2,156,1,7,1,1,3,7,160,1,164,1,168,1,1,7,1,1,1,5,1,1,1,1,1,1,1,1,4,1,1,2,4,1,1,1,1,2,1,1,2,1,1,3,1,1,14,1,1,2,2,140,
                1,27,1,1,2,1,1,12,2,228,2,1,1,1,1,5,1,1,1,1,1,1,2,208,2,4,1,1,2,7,1,212,2,216,2,220,2,2,1,1,2,1,1,3,1,1,27,1,1,17,1,1,2,1,1,14,2,176,1,
                1,10,180,1,184,1,188,1,192,1,196,1,6,1,1,2,1,1,5,2,200,1,2,2,204,1,3,1,1,1,1,1,1,5,1,1,1,1,1,1,1,1,4,1,1,2,4,1,1,1,1,2,1,1,2,2,1,33,2,
                1,1,1,1,1,1,5,1,1,1,1,1,1,1,1,4,1,1,2,4,1,1,1,1,2,1,1,2,2,1,21,2,1,1,1,2,224,1,1,10,228,1,232,1,236,1,240,1,244,1,9,1,1,5,3,248,1,1,1,
                2,252,1,3,1,1,1,1,1,1,5,5,9,13,17,21,15,1,25,2,1,29,18,1,1,2,2,200,4,37,1,1,23,2,228,2,6,1,1,7,1,1,2,1,1,4,1,1,7,1,1,3,4,1,1,1,1,7,1,1,
                2,1,1,4,1,1,7,11,1,212,4,216,4,220,4,1,1,1,1,7,1,1,2,1,1,4,1,1,7,8,1,1,1,1,1,1,1,1,7,2,156,3,2,2,160,3,4,2,164,3,7,1,1,3,7,168,3,172,3,
                176,3,1,20,1,1,2,2,172,4,14,2,128,3,1,10,132,3,136,3,140,3,144,3,148,3,6,1,1,2,1,1,5,2,152,3,2,2,156,3,6,1,1,32,1,1,2,1,5,24,1,1,1,5,1,
                1,1,1,1,1,1,1,7,4,1,1,1,1,2,2,1,1,1,1,1,3,1,1,17,2,200,3,6,1,1,23,1,1,6,1,1,5,2,160,5,1,1,1,1,5,1,1,1,1,1,9,1,1,5,2,1,1,1,1,1,3,1,1,1,
                1,1,1,5,1,1,1,1,1,1,2,140,5,7,7,1,144,5,148,5,152,5,2,2,1,1,1,1,1,3,1,1,17,1,1,6,1,1,7,2,188,3,1,10,192,3,196,3,200,3,204,3,208,3,9,1,
                1,5,3,212,3,1,1,2,216,3,3,1,1,1,1,1,1,5,1,1,1,1,1,1,1,1,7,4,1,1,1,1,2,2,1,1,1,2,1,33,2,1,1,1,1,1,1,5,1,1,1,1,1,1,1,1,7,4,1,1,1,1,2,2,1,
                1,1,2,1,21,2,1,1,1,2,216,4,2,2,220,4,4,3,224,4,1,6,1,1,3,6,228,4,232,4,236,4,8,1,1,2,1,1,4,2,1,1,6,1,1,3,3,1,1,1,24,2,252,6,6,1,1,7,1,
                1,1,5,1,1,1,1,1,1,1,1,4,1,1,2,4,1,1,1,1,2,1,1,2,1,1,5,1,1,1,5,1,1,1,1,1,6,1,1,2,1,1,5,1,1,2,1,1,5,1,1,1,5,1,1,1,1,1,1,2,152,6,4,1,1,2,
                7,1,156,6,160,6,164,6,2,1,1,2,1,1,5,2,220,4,1,10,224,4,228,4,232,4,236,4,240,4,6,1,1,2,1,1,5,2,244,4,2,2,248,4,5,1,1,1,5,1,1,1,1,1,1,1,
                1,4,1,1,2,4,1,1,1,1,2,1,1,2,2,1,33,4,1,1,1,5,1,1,1,1,1,1,1,1,4,1,1,2,4,1,1,1,1,2,1,1,2,2,1,21,13,1,1,10,2,236,4,26,2,224,6,6,1,1,7,2,180,
                5,1,10,184,5,188,5,192,5,196,5,200,5,9,1,1,5,3,204,5,1,1,2,208,5,14,1,1,30,1,1,6,2,180,6,14,1,1,2,1,1,4,2,1,1,6,10,1,164,8,168,8,172,8,
                1,1,1,8,1,1,2,1,1,4,2,1,1,6,7,1,1,1,1,1,1,1,8,2,224,6,2,2,228,6,4,3,232,6,1,6,1,1,3,6,236,6,240,6,244,6,8,1,1,1,5,1,1,1,1,1,1,1,1,7,4,
                1,1,1,1,2,2,1,1,1,1,1,5,1,1,1,5,1,1,1,1,1,9,1,1,5,2,1,1,1,1,1,5,1,1,1,5,1,1,1,1,1,1,2,136,8,7,7,1,140,8,144,8,148,8,2,2,1,1,1,1,1,5,2,
                144,7,1,10,148,7,152,7,156,7,160,7,164,7,9,1,1,5,3,168,7,1,1,2,172,7,5,1,1,1,5,1,1,1,1,1,1,1,1,7,4,1,1,1,1,2,2,1,1,1,2,1,33,4,1,1,1,5,
                1,1,1,1,1,1,1,1,7,4,1,1,1,1,2,2,1,1,1,2,1,21,13,1,1,6,2,168,9,23,1,1,6,1,1,14,3,55,1,5,98,2,1,5,1,1,9,14,1,13,15,1,17,14,2,29,1,1,1,5,
                14,1,9,32,1,1,32,1,5,17,1,1,31,1,5,31,1,1,21,1,5,9,1,1,50,1,1,81,1,1,30,1,1,71,1,1,11,13,1,5,9,13,17,21,25,29,33,37,41,45,49,21,1,53,26,
                1,1,2,8,5,9,13,17,21,25,29,33,1,5,37,41,45,49,53,10,2,57,61,41,1,1,17,12,197,1,1,5,9,13,17,21,25,29,33,37,45,5,177,1,1,5,9,45,5,181,1,
                1,5,9,74,1,1,33,1,1,37,1,1,5,6,137,2,21,25,29,33,1,5,37,41,45,49,53,32,1,1,11,6,237,2,41,45,49,53,21,13,189,3,1,5,9,13,17,21,25,29,33,
                37,41,21,1,45,49,1,1,15,12,129,2,1,5,9,13,17,21,25,29,33,37,45,5,237,1,1,5,9,45,5,241,1,1,5,9,36,14,153,2,1,5,9,13,17,21,25,29,33,37,41,
                45,21,1,49,26,1,1,3,8,181,3,13,17,21,25,29,33,1,5,37,41,45,49,53,10,2,57,61,20,1,1,4,6,5,9,13,17,21,25,1,5,29,33,37,41,45,11,1,49,36,1,
                1,32,1,1,5,6,185,2,21,25,29,33,1,5,37,41,45,49,53,32,1,1,2,9,189,2,9,13,17,21,25,29,33,1,5,37,41,45,49,53,10,2,57,61,20,1,1,11,6,193,2,
                41,45,49,53,21,13,153,5,1,5,9,13,17,21,25,29,33,37,41,21,1,45,15,13,145,4,1,5,9,13,17,21,25,29,33,37,41,21,1,45,26,1,1,3,8,181,5,13,17,
                21,25,29,33,1,5,37,41,45,49,53,10,2,57,61,20,1,1,5,6,153,2,13,17,21,25,1,5,29,33,37,41,45,32,1,1,2,9,201,3,9,13,17,21,25,29,33,1,5,37,
                41,45,49,53,10,2,57,61,20,1,1,11,6,161,2,33,37,41,45,61,1,1,19,1,1,3,8,221,3,13,17,21,25,29,33,1,5,37,41,45,49,53,10,2,57,61,10,12,141,
                2,1,5,9,13,17,21,25,29,33,37,45,5,249,1,1,5,9,45,5,253,1,1,5,9,36,14,233,5,1,5,9,13,17,21,25,29,33,37,41,45,21,1,49,15,13,233,5,1,5,9,
                13,17,21,25,29,33,37,41,21,1,45,14,14,173,2,1,5,9,13,17,21,25,29,33,37,41,45,21,1,49,26,1,1,3,8,153,5,13,17,21,25,29,33,1,5,37,41,45,49,
                53,10,2,57,61,20,1,1,5,6,213,1,13,17,21,25,1,5,29,33,37,41,45,32,1,1,2,9,185,5,9,13,17,21,25,29,33,1,5,37,41,45,49,53,10,2,57,61,20,1,
                1,11,6,221,1,33,37,41,45,21,13,249,2,1,5,9,13,17,21,25,29,33,37,41,21,1,45,15,13,165,3,1,5,9,13,17,21,25,29,33,37,41,21,1,45,14,14,173,
                3,1,5,9,13,17,21,25,29,33,37,41,45,21,1,49,7,1,13,1,1,5,2,1,1,1,3,1,6,1,1,3,1,17,2,1,3,1,21,3,1,8,1,45,4,25,2,254,1,5,1,3,1,14,5,1,3,1,
                18,5,1,3,1,22,5,1,7,1,45,6,29,3,65,3,1,3,1,69,3,1,3,1,73,3,1,4,1,250,1,5,1,3,1,10,1,1,16,1,85,7,77,4,101,8,93,5,113,9,105,6,138,2,10,1,
                7,1,85,11,117,7,125,12,1,4,1,129,1,12,1,4,1,150,2,13,1,15,1,101,14,133,1,8,145,1,15,141,1,9,202,2,13,1,15,1,113,16,153,1,10,165,1,15,161,
                1,11,134,2,10,1,3,1,26,5,1,4,1,173,1,2,1,4,1,177,1,2,1,4,1,146,2,13,1,3,1,38,5,1,10,1,237,1,17,181,1,12,158,2,18,1,4,1,162,2,18,1,4,1,
                198,2,13,1,4,1,130,1,5,1,10,1,197,2,19,133,2,13,210,2,20,1,4,1,214,2,20,1,4,1,229,2,21,1,4,1,233,2,21,1,4,1,237,2,21,1,10,1,174,2,22,241,
                2,14,182,2,18,1,3,1,54,18,1,3,1,58,18,1,3,1,62,18,1,3,1,66,23,1,3,1,82,24,1,3,1,86,24,1,3,1,90,24,1,3,1,102,24,1,3,1,110,24,1,3,1,118,
                24,1,8,1,50,25,193,1,15,126,24,1,3,1,122,24,1,4,1,137,3,2,1,22,1,237,1,26,221,1,16,237,1,26,221,1,17,186,2,27,149,3,12,234,1,28,1,4,1,
                229,3,21,1,10,1,226,2,29,233,3,18,142,1,30,1,4,1,238,2,20,1,4,1,154,1,20,1,4,1,158,1,20,1,4,1,162,1,20,1,4,1,166,1,20,1,10,1,170,1,31,
                245,3,19,198,1,28,1,4,1,194,1,28,1,4,1,218,1,28,1,4,1,137,4,32,1,4,1,146,1,33,1,9,1,150,1,34,133,2,20,126,28,1,4,1,210,1,28,1,4,1,214,
                1,35,1,4,1,226,1,28,1,4,1,230,1,28,1,4,1,222,1,36,1,15,1,242,2,37,145,4,13,197,2,38,133,2,21,30,10,1,3,1,34,10,1,3,1,42,13,1,3,1,46,39,
                1,9,1,237,1,17,189,1,22,70,18,1,3,1,74,18,1,3,1,78,18,1,4,1,178,2,18,1,9,1,129,5,15,253,4,23,94,24,1,3,1,98,24,1,4,1,137,5,40,1,10,1,174,
                2,41,141,5,14,182,2,42,1,3,1,54,42,1,3,1,58,42,1,3,1,62,42,1,3,1,66,43,1,3,1,82,44,1,3,1,86,44,1,3,1,90,44,1,3,1,102,44,1,3,1,110,44,1,
                3,1,118,44,1,8,1,50,45,161,3,24,126,44,1,3,1,122,44,1,4,1,165,5,2,1,22,1,205,3,26,189,3,25,205,3,26,189,3,26,186,2,27,153,3,27,134,1,13,
                1,4,1,138,1,46,1,16,1,197,2,19,133,2,28,242,2,47,189,5,29,186,1,20,1,4,1,145,6,48,1,4,1,174,1,20,1,4,1,178,1,20,1,4,1,182,1,20,1,10,1,
                153,6,49,149,6,30,234,2,20,1,4,1,234,1,50,1,4,1,161,6,40,1,10,1,226,2,51,165,6,18,142,1,52,1,4,1,238,2,53,1,4,1,154,1,53,1,4,1,158,1,53,
                1,4,1,162,1,53,1,4,1,166,1,53,1,10,1,170,1,54,177,6,19,198,1,50,1,4,1,194,1,50,1,4,1,218,1,50,1,4,1,197,6,32,1,4,1,146,1,55,1,9,1,150,
                1,56,145,4,31,126,50,1,4,1,210,1,50,1,4,1,214,1,57,1,4,1,226,1,50,1,4,1,230,1,50,1,4,1,222,1,58,1,16,1,242,2,37,145,4,32,209,4,38,145,
                4,33,206,1,28,1,10,1,237,1,17,189,1,34,170,2,33,1,10,1,186,2,59,217,6,12,190,2,60,1,4,1,194,2,60,1,3,1,106,24,1,3,1,46,61,1,9,1,186,2,
                27,157,3,35,70,42,1,3,1,74,42,1,3,1,78,42,1,4,1,178,2,42,1,9,1,129,5,15,177,7,23,94,44,1,3,1,98,44,1,4,1,181,7,40,1,10,1,197,2,19,133,
                2,36,222,2,33,1,4,1,234,1,62,1,4,1,230,2,33,1,4,1,238,2,63,1,4,1,154,1,63,1,4,1,158,1,63,1,4,1,162,1,63,1,4,1,166,1,63,1,10,1,170,1,64,
                189,7,19,198,1,62,1,4,1,194,1,62,1,4,1,218,1,62,1,4,1,209,7,32,1,9,1,150,1,65,189,5,37,126,62,1,4,1,210,1,62,1,4,1,214,1,66,1,4,1,226,
                1,62,1,4,1,230,1,62,1,4,1,222,1,67,1,22,1,242,2,37,145,4,38,241,5,38,189,5,39,250,2,68,225,7,40,238,1,28,1,4,1,246,1,28,1,4,1,242,1,28,
                1,4,1,202,1,28,1,4,1,138,1,69,1,16,1,242,2,37,145,4,41,242,2,70,241,7,29,186,1,53,1,4,1,197,8,48,1,4,1,174,1,53,1,4,1,178,1,53,1,4,1,182,
                1,53,1,10,1,205,8,49,201,8,30,234,2,53,1,4,1,213,8,40,1,4,1,206,1,50,1,4,1,166,2,33,1,4,1,217,8,71,1,10,1,174,2,72,221,8,14,182,2,60,1,
                3,1,54,60,1,3,1,58,60,1,3,1,62,60,1,3,1,66,73,1,3,1,82,74,1,3,1,86,74,1,3,1,90,74,1,3,1,102,74,1,3,1,110,74,1,3,1,118,74,1,8,1,50,75,229,
                6,42,126,74,1,3,1,122,74,1,4,1,245,8,2,1,28,1,145,7,26,129,7,43,145,7,26,129,7,44,186,2,27,153,3,45,186,2,27,157,3,46,170,2,55,1,9,1,186,
                2,59,221,6,47,106,44,1,4,1,218,2,33,1,4,1,186,1,63,1,4,1,141,9,48,1,4,1,174,1,63,1,4,1,178,1,63,1,4,1,182,1,63,1,10,1,149,9,49,145,9,30,
                234,2,63,1,4,1,157,9,40,1,4,1,206,1,62,1,4,1,161,9,71,1,4,1,165,9,48,1,10,1,242,2,37,145,4,48,222,2,55,1,4,1,234,1,76,1,4,1,230,2,55,1,
                4,1,238,2,77,1,4,1,154,1,77,1,4,1,158,1,77,1,4,1,162,1,77,1,4,1,166,1,77,1,10,1,170,1,78,173,9,19,198,1,76,1,4,1,194,1,76,1,4,1,218,1,
                76,1,4,1,193,9,32,1,9,1,150,1,79,241,7,49,126,76,1,4,1,210,1,76,1,4,1,214,1,80,1,4,1,226,1,76,1,4,1,230,1,76,1,4,1,222,1,81,1,22,1,242,
                2,37,145,4,50,165,8,38,241,7,51,250,2,68,209,9,40,238,1,50,1,4,1,246,1,50,1,4,1,242,1,50,1,4,1,202,1,50,1,3,1,114,24,1,3,1,46,82,1,9,1,
                186,2,59,225,6,52,70,60,1,3,1,74,60,1,3,1,78,60,1,4,1,178,2,60,1,9,1,129,5,15,221,9,23,94,74,1,3,1,98,74,1,4,1,225,9,40,1,4,1,166,2,55,
                1,4,1,229,9,71,1,10,1,250,2,68,233,9,40,238,1,62,1,4,1,246,1,62,1,4,1,242,1,62,1,4,1,202,1,62,1,4,1,190,1,20,1,4,1,246,2,71,1,4,1,218,
                2,55,1,4,1,186,1,77,1,4,1,237,9,48,1,4,1,174,1,77,1,4,1,178,1,77,1,4,1,182,1,77,1,10,1,245,9,49,241,9,30,234,2,77,1,4,1,253,9,40,1,4,1,
                206,1,76,1,4,1,129,10,71,1,10,1,186,2,59,225,6,53,170,2,83,1,9,1,186,2,59,221,6,54,106,74,1,3,1,114,44,1,4,1,141,10,71,1,10,1,250,2,68,
                145,10,40,238,1,76,1,4,1,246,1,76,1,4,1,242,1,76,1,4,1,202,1,76,1,4,1,190,1,53,1,4,1,166,2,83,1,4,1,149,10,71,1,4,1,190,1,63,1,4,1,153,
                10,71,1,3,1,114,74,1,4,1,190,1,77,1,1,1,
            };
            
            return new CompactTableReader(new BinReader(new CompressReader().Uncompress(bytes))).Read();
        }
        
        public static readonly TerminalSymbol identifier = new TerminalSymbol(0, "identifier", true, "");
        public static readonly TerminalSymbol number = new TerminalSymbol(1, "number", true, "");
        public static readonly TerminalSymbol any = new TerminalSymbol(2, "any", true, "");
        public static readonly TerminalSymbol text = new TerminalSymbol(3, "text", true, "");
        public static readonly TerminalSymbol ucBlock = new TerminalSymbol(4, "ucBlock", true, "");
        public static readonly TerminalSymbol ucCategory = new TerminalSymbol(5, "ucCategory", true, "");
        public static readonly TerminalSymbol ucCodepoint = new TerminalSymbol(6, "ucCodepoint", true, "");
        public static readonly TerminalSymbol __T1 = new TerminalSymbol(7, "__T1", false, "grammar");
        public static readonly TerminalSymbol __T2 = new TerminalSymbol(8, "__T2", false, "{");
        public static readonly TerminalSymbol __T3 = new TerminalSymbol(9, "__T3", false, "}");
        public static readonly TerminalSymbol __T4 = new TerminalSymbol(10, "__T4", false, "options");
        public static readonly TerminalSymbol __T5 = new TerminalSymbol(11, "__T5", true, "Start");
        public static readonly TerminalSymbol __T6 = new TerminalSymbol(12, "__T6", false, "=");
        public static readonly TerminalSymbol __T7 = new TerminalSymbol(13, "__T7", false, ";");
        public static readonly TerminalSymbol __T8 = new TerminalSymbol(14, "__T8", true, "Spacing");
        public static readonly TerminalSymbol __T9 = new TerminalSymbol(15, "__T9", false, "rules");
        public static readonly TerminalSymbol __T10 = new TerminalSymbol(16, "__T10", false, "|");
        public static readonly TerminalSymbol __T11 = new TerminalSymbol(17, "__T11", true, "?");
        public static readonly TerminalSymbol __T12 = new TerminalSymbol(18, "__T12", true, "*");
        public static readonly TerminalSymbol __T13 = new TerminalSymbol(19, "__T13", true, "+");
        public static readonly TerminalSymbol __T14 = new TerminalSymbol(20, "__T14", false, ",");
        public static readonly TerminalSymbol __T15 = new TerminalSymbol(21, "__T15", false, "^");
        public static readonly TerminalSymbol __T16 = new TerminalSymbol(22, "__T16", false, "(");
        public static readonly TerminalSymbol __T17 = new TerminalSymbol(23, "__T17", false, ")");
        public static readonly TerminalSymbol __T18 = new TerminalSymbol(24, "__T18", false, "terminals");
        public static readonly TerminalSymbol __T19 = new TerminalSymbol(25, "__T19", false, "~");
        public static readonly TerminalSymbol __T20 = new TerminalSymbol(26, "__T20", false, "..");
        public static readonly TerminalSymbol __T21 = new TerminalSymbol(27, "__T21", true, ":");
        public static readonly TerminalSymbol __T22 = new TerminalSymbol(28, "__T22", true, "->");
        public static readonly TerminalSymbol __T23 = new TerminalSymbol(29, "__T23", false, "-");
        public static readonly TerminalSymbol __eof = new TerminalSymbol(30, "__eof", false, "$eof$");
        public static readonly NonterminalSymbol file = new NonterminalSymbol(31, "file", false, RepeatKind.None);
        public static readonly NonterminalSymbol grammar = new NonterminalSymbol(32, "grammar", false, RepeatKind.None);
        public static readonly NonterminalSymbol grammar_item = new NonterminalSymbol(33, "grammar_item", false, RepeatKind.None);
        public static readonly NonterminalSymbol grammar_options = new NonterminalSymbol(34, "grammar_options", false, RepeatKind.None);
        public static readonly NonterminalSymbol option = new NonterminalSymbol(35, "option", false, RepeatKind.None);
        public static readonly NonterminalSymbol grammar_rules = new NonterminalSymbol(36, "grammar_rules", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule = new NonterminalSymbol(37, "rule", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_expression = new NonterminalSymbol(38, "rule_expression", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_sequence = new NonterminalSymbol(39, "rule_sequence", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_repetition = new NonterminalSymbol(40, "rule_repetition", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_option = new NonterminalSymbol(41, "rule_option", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_star = new NonterminalSymbol(42, "rule_star", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_plus = new NonterminalSymbol(43, "rule_plus", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_tree_action = new NonterminalSymbol(44, "rule_tree_action", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_drop_element = new NonterminalSymbol(45, "rule_drop_element", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_promote_element = new NonterminalSymbol(46, "rule_promote_element", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_element = new NonterminalSymbol(47, "rule_element", false, RepeatKind.None);
        public static readonly NonterminalSymbol sub_rule = new NonterminalSymbol(48, "sub_rule", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_atom = new NonterminalSymbol(49, "rule_atom", false, RepeatKind.None);
        public static readonly NonterminalSymbol reference = new NonterminalSymbol(50, "reference", false, RepeatKind.None);
        public static readonly NonterminalSymbol grammar_terminals = new NonterminalSymbol(51, "grammar_terminals", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_rule = new NonterminalSymbol(52, "terminal_rule", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_expression = new NonterminalSymbol(53, "terminal_expression", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_alternative = new NonterminalSymbol(54, "terminal_alternative", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_sequence = new NonterminalSymbol(55, "terminal_sequence", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_repetition = new NonterminalSymbol(56, "terminal_repetition", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_option = new NonterminalSymbol(57, "terminal_option", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_star = new NonterminalSymbol(58, "terminal_star", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_plus = new NonterminalSymbol(59, "terminal_plus", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_range_loop = new NonterminalSymbol(60, "terminal_range_loop", false, RepeatKind.None);
        public static readonly NonterminalSymbol range = new NonterminalSymbol(61, "range", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_element = new NonterminalSymbol(62, "terminal_element", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_not = new NonterminalSymbol(63, "terminal_not", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_atom = new NonterminalSymbol(64, "terminal_atom", false, RepeatKind.None);
        public static readonly NonterminalSymbol characterRange = new NonterminalSymbol(65, "characterRange", false, RepeatKind.None);
        public static readonly NonterminalSymbol character = new NonterminalSymbol(66, "character", false, RepeatKind.None);
        public static readonly NonterminalSymbol __N1 = new NonterminalSymbol(67, "__N1", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N2 = new NonterminalSymbol(68, "__N2", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N3 = new NonterminalSymbol(69, "__N3", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N4 = new NonterminalSymbol(70, "__N4", false, RepeatKind.None);
        public static readonly NonterminalSymbol __N5 = new NonterminalSymbol(71, "__N5", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N6 = new NonterminalSymbol(72, "__N6", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N7 = new NonterminalSymbol(73, "__N7", false, RepeatKind.None);
        public static readonly NonterminalSymbol __N8 = new NonterminalSymbol(74, "__N8", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N9 = new NonterminalSymbol(75, "__N9", false, RepeatKind.None);
        public static readonly NonterminalSymbol __N10 = new NonterminalSymbol(76, "__N10", false, RepeatKind.Star);
        public static readonly NonterminalSymbol terminal_diff = new NonterminalSymbol(77, "terminal_diff", false, RepeatKind.None);
        public static readonly NonterminalSymbol __N11 = new NonterminalSymbol(78, "__N11", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N12 = new NonterminalSymbol(79, "__N12", false, RepeatKind.Optional);
        public static readonly TerminalSymbol newline = new TerminalSymbol(80, "newline", false, "");
        public static readonly TerminalSymbol newlineChar = new TerminalSymbol(81, "newlineChar", false, "");
        public static readonly TerminalSymbol whitespace = new TerminalSymbol(82, "whitespace", false, "");
        public static readonly TerminalSymbol lineComment = new TerminalSymbol(83, "lineComment", false, "");
        public static readonly TerminalSymbol blockComment = new TerminalSymbol(84, "blockComment", false, "");
        public static readonly TerminalSymbol spacing = new TerminalSymbol(85, "spacing", false, "");
        public static readonly TerminalSymbol identifierStart = new TerminalSymbol(86, "identifierStart", false, "");
        public static readonly TerminalSymbol identifierContinue = new TerminalSymbol(87, "identifierContinue", false, "");
        public static readonly TerminalSymbol digit = new TerminalSymbol(88, "digit", false, "");
        public static readonly TerminalSymbol nonzeroDigit = new TerminalSymbol(89, "nonzeroDigit", false, "");
        public static readonly TerminalSymbol zero = new TerminalSymbol(90, "zero", false, "");
        public static readonly TerminalSymbol hexDigit = new TerminalSymbol(91, "hexDigit", false, "");
        public static readonly TerminalSymbol escapes = new TerminalSymbol(92, "escapes", false, "");
        public static readonly TerminalSymbol ucNameStart = new TerminalSymbol(93, "ucNameStart", false, "");
        public static readonly TerminalSymbol ucNameInner = new TerminalSymbol(94, "ucNameInner", false, "");
        public static readonly TerminalSymbol ucNameEnd = new TerminalSymbol(95, "ucNameEnd", false, "");
        public static readonly TerminalSymbol ucName = new TerminalSymbol(96, "ucName", false, "");
        public static readonly NonterminalSymbol __acc = new NonterminalSymbol(97, "__acc", true, RepeatKind.None);
        
        private static readonly Symbol[] symbols = 
        {
            identifier,number,any,text,ucBlock,ucCategory,ucCodepoint,__T1,__T2,__T3,__T4,__T5,__T6,__T7,__T8,__T9,__T10,__T11,__T12,__T13,__T14,__T15,
            __T16,__T17,__T18,__T19,__T20,__T21,__T22,__T23,__eof,file,grammar,grammar_item,grammar_options,option,grammar_rules,rule,rule_expression,
            rule_sequence,rule_repetition,rule_option,rule_star,rule_plus,rule_tree_action,rule_drop_element,rule_promote_element,rule_element,sub_rule,
            rule_atom,reference,grammar_terminals,terminal_rule,terminal_expression,terminal_alternative,terminal_sequence,terminal_repetition,terminal_option,
            terminal_star,terminal_plus,terminal_range_loop,range,terminal_element,terminal_not,terminal_atom,characterRange,character,__N1,__N2,__N3,
            __N4,__N5,__N6,__N7,__N8,__N9,__N10,terminal_diff,__N11,__N12,newline,newlineChar,whitespace,lineComment,blockComment,spacing,identifierStart,
            identifierContinue,digit,nonzeroDigit,zero,hexDigit,escapes,ucNameStart,ucNameInner,ucNameEnd,ucName,__acc,
        };
        
        private static readonly Production[] productions = 
        {
            new Production(__acc, "file", new bool[]{false}, new bool[]{false}),
            new Production(file, "grammar", new bool[]{false}, new bool[]{false}),
            new Production(grammar, ",'grammar' ˈidentifierˈ ,'{' __N1 ,'}'", new bool[]{true,false,true,false,true}, new bool[]{false,false,false,false,false}),
            new Production(grammar_item, "^grammar_options", new bool[]{false}, new bool[]{true}),
            new Production(grammar_item, "^grammar_rules", new bool[]{false}, new bool[]{true}),
            new Production(grammar_item, "^grammar_terminals", new bool[]{false}, new bool[]{true}),
            new Production(grammar_options, ",'options' ,'{' __N2 ,'}'", new bool[]{true,true,false,true}, new bool[]{false,false,false,false}),
            new Production(option, "'Start' ,'=' ˈidentifierˈ ,';'", new bool[]{false,true,false,true}, new bool[]{false,false,false,false}),
            new Production(option, "'Spacing' ,'=' ˈidentifierˈ ,';'", new bool[]{false,true,false,true}, new bool[]{false,false,false,false}),
            new Production(grammar_rules, ",'rules' ,'{' __N3 ,'}'", new bool[]{true,true,false,true}, new bool[]{false,false,false,false}),
            new Production(rule, "ˈidentifierˈ ,__N4 rule_expression ,';'", new bool[]{false,true,false,true}, new bool[]{false,false,false,false}),
            new Production(rule_expression, "rule_sequence __N5", new bool[]{false,false}, new bool[]{false,false}),
            new Production(rule_sequence, "__N6", new bool[]{false}, new bool[]{false}),
            new Production(rule_repetition, "^rule_option", new bool[]{false}, new bool[]{true}),
            new Production(rule_repetition, "^rule_star", new bool[]{false}, new bool[]{true}),
            new Production(rule_repetition, "^rule_plus", new bool[]{false}, new bool[]{true}),
            new Production(rule_repetition, "^rule_tree_action", new bool[]{false}, new bool[]{true}),
            new Production(rule_option, "rule_tree_action ,'?'", new bool[]{false,true}, new bool[]{false,false}),
            new Production(rule_star, "rule_tree_action ,'*'", new bool[]{false,true}, new bool[]{false,false}),
            new Production(rule_plus, "rule_tree_action ,'+'", new bool[]{false,true}, new bool[]{false,false}),
            new Production(rule_tree_action, "^rule_drop_element", new bool[]{false}, new bool[]{true}),
            new Production(rule_tree_action, "^rule_promote_element", new bool[]{false}, new bool[]{true}),
            new Production(rule_tree_action, "^rule_element", new bool[]{false}, new bool[]{true}),
            new Production(rule_drop_element, ",',' rule_element", new bool[]{true,false}, new bool[]{false,false}),
            new Production(rule_promote_element, ",'^' rule_element", new bool[]{true,false}, new bool[]{false,false}),
            new Production(rule_element, "^sub_rule", new bool[]{false}, new bool[]{true}),
            new Production(rule_element, ",'(' ^rule_expression ,')'", new bool[]{true,false,true}, new bool[]{false,true,false}),
            new Production(rule_element, "^rule_atom", new bool[]{false}, new bool[]{true}),
            new Production(sub_rule, ",'{' ˈidentifierˈ ,__N7 rule_expression ,'}'", new bool[]{true,false,true,false,true}, new bool[]{false,false,false,false,false}),
            new Production(rule_atom, "^reference", new bool[]{false}, new bool[]{true}),
            new Production(rule_atom, "^ˈtextˈ", new bool[]{false}, new bool[]{true}),
            new Production(reference, "^ˈidentifierˈ", new bool[]{false}, new bool[]{true}),
            new Production(grammar_terminals, ",'terminals' ,'{' __N8 ,'}'", new bool[]{true,true,false,true}, new bool[]{false,false,false,false}),
            new Production(terminal_rule, "ˈidentifierˈ ,__N9 terminal_expression ,';'", new bool[]{false,true,false,true}, new bool[]{false,false,false,false}),
            new Production(terminal_expression, "terminal_alternative __N10", new bool[]{false,false}, new bool[]{false,false}),
            new Production(terminal_alternative, "^terminal_sequence", new bool[]{false}, new bool[]{true}),
            new Production(terminal_alternative, "^terminal_diff", new bool[]{false}, new bool[]{true}),
            new Production(terminal_sequence, "__N11", new bool[]{false}, new bool[]{false}),
            new Production(terminal_repetition, "^terminal_option", new bool[]{false}, new bool[]{true}),
            new Production(terminal_repetition, "^terminal_star", new bool[]{false}, new bool[]{true}),
            new Production(terminal_repetition, "^terminal_plus", new bool[]{false}, new bool[]{true}),
            new Production(terminal_repetition, "^terminal_range_loop", new bool[]{false}, new bool[]{true}),
            new Production(terminal_repetition, "^terminal_element", new bool[]{false}, new bool[]{true}),
            new Production(terminal_option, "terminal_element '?'", new bool[]{false,false}, new bool[]{false,false}),
            new Production(terminal_star, "terminal_element '*'", new bool[]{false,false}, new bool[]{false,false}),
            new Production(terminal_plus, "terminal_element '+'", new bool[]{false,false}, new bool[]{false,false}),
            new Production(terminal_range_loop, "terminal_element range", new bool[]{false,false}, new bool[]{false,false}),
            new Production(range, ",'{' ˈnumberˈ __N12 ,'}'", new bool[]{true,false,false,true}, new bool[]{false,false,false,false}),
            new Production(terminal_element, "^terminal_atom", new bool[]{false}, new bool[]{true}),
            new Production(terminal_element, "^terminal_not", new bool[]{false}, new bool[]{true}),
            new Production(terminal_element, ",'(' ^terminal_expression ,')'", new bool[]{true,false,true}, new bool[]{false,true,false}),
            new Production(terminal_not, ",'~' terminal_element", new bool[]{true,false}, new bool[]{false,false}),
            new Production(terminal_atom, "^ˈanyˈ", new bool[]{false}, new bool[]{true}),
            new Production(terminal_atom, "^ˈtextˈ", new bool[]{false}, new bool[]{true}),
            new Production(terminal_atom, "^characterRange", new bool[]{false}, new bool[]{true}),
            new Production(terminal_atom, "^ˈucCodepointˈ", new bool[]{false}, new bool[]{true}),
            new Production(terminal_atom, "^ˈucBlockˈ", new bool[]{false}, new bool[]{true}),
            new Production(terminal_atom, "^ˈucCategoryˈ", new bool[]{false}, new bool[]{true}),
            new Production(terminal_atom, "^reference", new bool[]{false}, new bool[]{true}),
            new Production(characterRange, "character ,'..' character", new bool[]{false,true,false}, new bool[]{false,false,false}),
            new Production(character, "^ˈucCodepointˈ", new bool[]{false}, new bool[]{true}),
            new Production(character, "^ˈtextˈ", new bool[]{false}, new bool[]{true}),
            new Production(__N1, "__N1 grammar_item", new bool[]{false,false}, new bool[]{false,false}),
            new Production(__N1, "grammar_item", new bool[]{false}, new bool[]{false}),
            new Production(__N1, "", new bool[]{}, new bool[]{}),
            new Production(__N2, "__N2 option", new bool[]{false,false}, new bool[]{false,false}),
            new Production(__N2, "option", new bool[]{false}, new bool[]{false}),
            new Production(__N2, "", new bool[]{}, new bool[]{}),
            new Production(__N3, "__N3 rule", new bool[]{false,false}, new bool[]{false,false}),
            new Production(__N3, "rule", new bool[]{false}, new bool[]{false}),
            new Production(__N3, "", new bool[]{}, new bool[]{}),
            new Production(__N4, "':'", new bool[]{false}, new bool[]{false}),
            new Production(__N4, "'->'", new bool[]{false}, new bool[]{false}),
            new Production(__N5, "__N5 ,'|' rule_sequence", new bool[]{false,true,false}, new bool[]{false,false,false}),
            new Production(__N5, ",'|' rule_sequence", new bool[]{true,false}, new bool[]{false,false}),
            new Production(__N5, "", new bool[]{}, new bool[]{}),
            new Production(__N6, "__N6 rule_repetition", new bool[]{false,false}, new bool[]{false,false}),
            new Production(__N6, "rule_repetition", new bool[]{false}, new bool[]{false}),
            new Production(__N6, "", new bool[]{}, new bool[]{}),
            new Production(__N7, "':'", new bool[]{false}, new bool[]{false}),
            new Production(__N7, "'->'", new bool[]{false}, new bool[]{false}),
            new Production(__N8, "__N8 terminal_rule", new bool[]{false,false}, new bool[]{false,false}),
            new Production(__N8, "terminal_rule", new bool[]{false}, new bool[]{false}),
            new Production(__N8, "", new bool[]{}, new bool[]{}),
            new Production(__N9, "':'", new bool[]{false}, new bool[]{false}),
            new Production(__N9, "'->'", new bool[]{false}, new bool[]{false}),
            new Production(__N10, "__N10 ,'|' terminal_alternative", new bool[]{false,true,false}, new bool[]{false,false,false}),
            new Production(__N10, ",'|' terminal_alternative", new bool[]{true,false}, new bool[]{false,false}),
            new Production(__N10, "", new bool[]{}, new bool[]{}),
            new Production(terminal_diff, "terminal_sequence ,'-' terminal_sequence", new bool[]{false,true,false}, new bool[]{false,false,false}),
            new Production(__N11, "__N11 terminal_repetition", new bool[]{false,false}, new bool[]{false,false}),
            new Production(__N11, "terminal_repetition", new bool[]{false}, new bool[]{false}),
            new Production(__N11, "", new bool[]{}, new bool[]{}),
            new Production(__N12, ",',' ˈnumberˈ", new bool[]{true,false}, new bool[]{false,false}),
            new Production(__N12, "", new bool[]{}, new bool[]{}),
        };
    }
}
