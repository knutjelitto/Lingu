//------------------------------------------------------------------------------ 
// <auto-generated> 
// This code was generated by the lingu compiler compiler. 
// from file: 'Lingu.Grammar' DO NOT EDIT! 
// 
// Changes to this file may cause incorrect behavior and will be lost if 
// the code is regenerated. 
// </auto-generated> 
//------------------------------------------------------------------------------

namespace Lingu.CC
{
    using Lingu.Runtime.Commons;
    using Lingu.Runtime.Concretes;
    using Lingu.Runtime.Structures;
    
    public class LinguContext : Lingu.Runtime.Concretes.LinguContext
    {
        public LinguContext()
            : base(symbols, productions, CreateParseTable(), CreateDfaSet())
        {
        }
        public static IDfaSet CreateDfaSet()
        {
            byte[] bytes = 
            {
                237,46,0,2,202,2,1,172,3,1,1,2,3,4,4,4,4,4,4,3,3,3,4,1,5,6,6,5,5,7,7,6,6,8,6,6,8,5,4,2,2,6,4,9,9,9,6,4,10,10,10,11,11,11,12,12,9,9,9,9,
                13,13,13,13,13,13,13,9,13,13,2,14,14,15,16,11,12,12,17,10,10,10,10,10,16,16,16,16,18,10,16,16,19,16,16,19,20,21,5,5,6,12,9,9,9,9,9,8,13,
                13,22,23,23,15,15,15,15,24,24,24,24,24,24,24,15,24,24,2,14,14,15,6,12,10,25,10,26,10,10,10,27,10,28,22,23,23,29,20,20,20,20,20,28,28,28,
                28,18,20,28,28,30,28,28,30,20,21,16,9,12,31,31,31,13,23,15,15,15,15,15,8,24,24,22,10,12,32,12,25,25,25,25,25,32,32,32,32,18,25,32,32,33,
                32,32,33,20,21,34,16,16,16,16,23,20,35,20,26,20,20,20,27,20,22,28,12,36,37,37,31,31,31,31,38,38,38,38,38,38,38,31,38,38,2,14,14,15,15,
                23,31,24,12,25,26,25,25,25,27,25,22,32,36,26,20,23,39,23,35,35,35,35,35,39,39,39,39,18,35,39,39,40,39,39,40,20,21,34,28,28,28,28,13,37,
                31,31,31,31,31,8,38,38,22,23,36,34,32,32,32,32,10,36,23,35,26,35,35,35,27,35,22,39,36,31,37,31,38,24,36,34,39,39,39,39,20,37,36,25,36,
                38,35,58,1,103,103,1,114,114,1,97,97,1,109,109,3,65,90,95,95,97,122,4,48,57,65,90,95,95,97,122,1,123,123,1,111,111,1,116,116,1,125,125,
                1,112,112,1,105,105,1,110,110,1,115,115,1,117,117,1,108,108,1,101,101,1,83,83,1,99,99,1,61,61,1,45,45,1,58,58,1,62,62,1,39,39,1,40,40,
                1,44,44,1,59,59,1,94,94,1,124,124,3,1,118,38,40,91,93,255,255,67,1,92,92,9,39,39,48,48,92,92,97,98,102,102,110,110,114,114,116,116,118,
                118,3,48,57,65,70,97,102,1,46,46,5,65,84,86,90,95,95,97,116,118,122,2,85,85,117,117,1,126,126,1,43,43,1,98,98,2,65,90,97,122,3,32,32,45,
                45,95,95,3,48,57,65,90,97,122,1,42,42,1,63,63,1,41,41,1,48,48,1,49,57,1,48,57,4,9,13,32,32,133,1,133,1,168,64,169,64,1,47,47,6,1,31,9,
                11,12,14,46,48,132,1,134,1,167,64,170,64,255,255,67,4,10,10,13,13,133,1,133,1,168,64,169,64,7,1,20,9,11,12,14,41,43,46,48,132,1,134,1,
                167,64,170,64,255,255,67,7,1,20,8,14,31,33,41,43,46,48,132,1,134,1,167,64,170,64,255,255,67,3,1,8,41,43,46,48,255,255,67,2,1,6,41,43,255,
                255,67,2,1,12,46,48,255,255,67,2,42,42,47,47,42,8,14,3,1,8,1,1,19,1,1,1,2,1,2,3,1,3,4,1,3,5,1,2,6,1,1,7,1,3,1,1,31,1,1,2,2,9,1,1,1,4,1,
                1,5,1,2,2,5,1,9,1,6,1,1,1,23,14,2,1,11,8,2,1,16,16,31,1,25,1,10,4,7,1,1,8,8,13,9,22,1,10,2,1,8,3,1,11,4,1,7,5,1,12,6,1,13,7,1,12,1,14,
                9,1,15,10,1,16,11,1,13,12,1,24,1,16,14,1,1,15,1,3,16,1,11,17,1,12,18,1,2,19,1,15,20,1,13,21,2,1,13,14,2,1,15,6,27,1,12,1,10,2,17,1,9,12,
                2,10,2,8,8,1,2,3,1,18,4,1,11,5,1,12,6,1,1,1,7,1,9,1,2,9,1,1,10,1,8,11,2,1,3,2,12,1,1,1,10,2,4,1,9,2,1,5,1,1,1,2,2,5,1,13,1,19,1,1,1,4,
                4,12,1,30,1,29,2,20,1,21,3,1,22,2,2,1,20,6,2,1,4,18,43,1,23,1,21,1,14,1,1,1,22,1,9,1,17,8,23,1,24,13,25,14,26,15,4,16,27,17,6,18,28,19,
                2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,3,3,1,5,16,
                3,1,47,6,2,1,4,18,12,1,23,1,26,1,3,1,14,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,37,1,17,1,27,10,23,1,24,13,20,14,33,15,
                26,16,34,17,35,18,30,26,28,45,36,46,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,
                11,9,2,2,32,12,9,2,1,9,2,4,26,1,5,17,2,37,19,5,17,1,32,20,1,32,21,1,32,22,1,32,23,1,32,24,1,32,25,1,28,1,14,27,3,38,28,18,33,6,38,1,6,
                29,1,39,30,3,40,31,41,30,9,32,2,40,31,41,30,1,18,1,6,34,1,39,35,3,40,36,41,35,9,37,2,40,36,41,35,1,31,1,32,39,2,32,40,9,25,2,32,41,9,25,
                2,32,42,9,25,2,32,43,9,25,2,32,44,9,25,1,9,25,2,1,2,2,5,1,14,1,26,1,1,1,3,2,9,1,14,1,17,2,26,1,28,2,2,1,23,6,2,1,4,18,55,1,23,1,19,1,20,
                1,21,1,14,1,18,1,1,1,22,1,9,1,17,11,23,1,24,13,42,14,37,15,25,16,26,17,43,18,4,19,27,20,6,21,28,22,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,
                31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,6,3,1,5,19,3,1,16,6,2,1,4,18,27,1,23,1,1,1,9,4,
                23,1,24,13,4,14,6,15,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,
                9,2,1,9,2,1,3,1,5,14,1,1,20,6,2,1,4,18,43,1,23,1,24,1,21,1,1,1,22,1,9,1,17,8,23,1,24,13,44,14,25,15,4,16,27,17,6,18,28,19,2,29,2,30,4,
                3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,3,3,1,5,16,3,1,51,6,2,1,
                4,18,18,1,23,1,19,1,20,1,26,1,3,1,14,1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,47,1,9,1,17,1,27,14,23,1,24,13,42,14,
                37,15,20,16,33,17,26,18,43,19,34,20,35,21,30,29,6,48,28,49,36,50,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,
                2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,7,26,1,5,20,2,37,22,5,20,1,32,23,1,32,24,1,32,25,1,32,26,1,32,27,1,32,28,1,28,1,14,
                30,3,38,31,18,36,6,41,1,6,32,1,39,33,3,40,34,41,33,9,35,2,40,34,41,33,1,18,1,6,37,1,39,38,3,40,39,41,38,9,40,2,40,39,41,38,1,31,1,32,42,
                2,32,43,9,28,2,32,44,9,28,2,32,45,9,28,2,32,46,9,28,2,32,47,9,28,1,9,28,3,1,4,2,13,1,26,1,14,1,17,3,20,1,26,2,28,3,3,1,3,4,8,1,28,1,33,
                1,1,33,2,1,1,52,6,2,1,4,18,20,1,23,1,19,1,20,1,26,1,3,1,28,1,14,1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,47,1,9,1,
                17,1,27,14,23,1,24,13,42,14,37,15,20,16,33,17,26,19,43,20,34,21,35,22,30,30,6,49,28,50,36,51,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,
                14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,4,3,1,33,18,3,26,1,5,21,2,37,23,5,21,1,32,24,1,32,25,
                1,32,26,1,32,27,1,32,28,1,32,29,1,28,1,14,31,3,38,32,18,37,6,42,1,6,33,1,39,34,3,40,35,41,34,9,36,2,40,35,41,34,1,18,1,6,38,1,39,39,3,
                40,40,41,39,9,41,2,40,40,41,39,1,31,1,32,43,2,32,44,9,29,2,32,45,9,29,2,32,46,9,29,2,32,47,9,29,2,32,48,9,29,1,9,29,3,1,47,6,2,1,4,18,
                12,1,23,1,24,1,26,1,3,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,37,1,17,1,27,10,23,1,24,13,44,14,20,15,33,16,34,17,35,18,
                30,26,28,45,36,46,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,
                1,9,2,4,26,1,5,17,2,37,19,5,17,1,32,20,1,32,21,1,32,22,1,32,23,1,32,24,1,32,25,1,28,1,14,27,3,38,28,18,33,6,38,1,6,29,1,39,30,3,40,31,
                41,30,9,32,2,40,31,41,30,1,18,1,6,34,1,39,35,3,40,36,41,35,9,37,2,40,36,41,35,1,31,1,32,39,2,32,40,9,25,2,32,41,9,25,2,32,42,9,25,2,32,
                43,9,25,2,32,44,9,25,1,9,25,2,1,42,6,2,1,4,18,6,1,3,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,23,5,23,1,33,13,34,14,35,
                15,30,23,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,1,
                26,1,5,14,2,37,16,5,14,1,32,17,1,32,18,1,32,19,1,32,20,1,32,21,1,32,22,1,28,1,14,24,3,38,25,18,30,6,35,1,6,26,1,39,27,3,40,28,41,27,9,
                29,2,40,28,41,27,1,18,1,6,31,1,39,32,3,40,33,41,32,9,34,2,40,33,41,32,1,32,1,32,36,2,32,37,9,22,2,32,38,9,22,2,32,39,9,22,2,32,40,9,22,
                2,32,41,9,22,1,9,22,2,2,5,1,24,1,44,1,1,1,3,2,9,1,24,1,17,2,44,1,28,2,2,1,23,6,2,1,4,18,55,1,23,1,24,1,19,1,20,1,21,1,18,1,1,1,22,1,9,
                1,17,11,23,1,24,13,44,14,42,15,37,16,25,17,43,18,4,19,27,20,6,21,28,22,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,
                8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,6,3,1,5,19,3,1,46,6,2,1,4,18,10,1,23,1,3,1,14,1,1,1,1,2,12,1,7,1,7,1,7,1,7,
                1,7,1,7,12,2,1,5,8,2,1,6,14,35,1,17,1,27,9,23,1,24,13,33,14,26,15,34,16,35,17,30,25,28,44,36,45,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,
                2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,3,26,1,5,16,2,37,18,5,16,1,32,19,1,32,20,1,32,21,1,
                32,22,1,32,23,1,32,24,1,28,1,14,26,3,38,27,18,32,6,37,1,6,28,1,39,29,3,40,30,41,29,9,31,2,40,30,41,29,1,18,1,6,33,1,39,34,3,40,35,41,34,
                9,36,2,40,35,41,34,1,31,1,32,38,2,32,39,9,24,2,32,40,9,24,2,32,41,9,24,2,32,42,9,24,2,32,43,9,24,1,9,24,2,1,3,2,9,1,2,1,2,2,45,1,46,2,
                1,4,1,47,2,30,6,2,1,4,22,12,1,7,1,7,1,7,1,7,1,7,1,7,18,19,3,23,1,35,13,30,21,2,29,2,30,4,3,29,2,23,3,30,4,1,60,2,31,2,14,5,1,6,6,1,32,
                7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,1,37,14,1,32,15,1,32,16,1,32,17,1,32,18,1,32,19,1,32,20,1,38,1,14,22,
                1,6,23,1,32,24,2,32,25,9,20,2,32,26,9,20,2,32,27,9,20,2,32,28,9,20,2,32,29,9,20,1,9,20,51,6,2,1,4,18,18,1,23,1,24,1,19,1,20,1,26,1,3,1,
                18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,47,1,9,1,17,1,27,14,23,1,24,13,44,14,42,15,37,16,20,17,33,18,43,19,34,20,35,
                21,30,29,6,48,28,49,36,50,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,
                12,9,2,1,9,2,7,26,1,5,20,2,37,22,5,20,1,32,23,1,32,24,1,32,25,1,32,26,1,32,27,1,32,28,1,28,1,14,30,3,38,31,18,36,6,41,1,6,32,1,39,33,3,
                40,34,41,33,9,35,2,40,34,41,33,1,18,1,6,37,1,39,38,3,40,39,41,38,9,40,2,40,39,41,38,1,31,1,32,42,2,32,43,9,28,2,32,44,9,28,2,32,45,9,28,
                2,32,46,9,28,2,32,47,9,28,1,9,28,3,1,4,2,13,1,24,1,26,1,17,3,44,1,20,2,28,3,3,1,52,6,2,1,4,18,20,1,23,1,24,1,19,1,20,1,26,1,3,1,28,1,18,
                1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,47,1,9,1,17,1,27,14,23,1,24,13,44,14,42,15,37,16,20,17,33,18,43,20,34,21,35,22,
                30,30,6,49,28,50,36,51,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,
                9,2,1,9,2,5,3,1,33,19,2,26,1,5,21,2,37,23,5,21,1,32,24,1,32,25,1,32,26,1,32,27,1,32,28,1,32,29,1,28,1,14,31,3,38,32,18,37,6,42,1,6,33,
                1,39,34,3,40,35,41,34,9,36,2,40,35,41,34,1,18,1,6,38,1,39,39,3,40,40,41,39,9,41,2,40,40,41,39,1,31,1,32,43,2,32,44,9,29,2,32,45,9,29,2,
                32,46,9,29,2,32,47,9,29,2,32,48,9,29,1,9,29,3,1,20,6,2,1,4,18,43,1,23,1,21,1,1,1,22,1,9,1,17,1,10,8,23,1,24,13,25,14,4,15,27,16,6,17,28,
                18,9,19,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,2,3,
                1,5,15,4,1,50,6,2,1,4,18,16,1,23,1,19,1,20,1,3,1,14,1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,45,1,9,1,17,1,27,13,
                23,1,24,13,42,14,37,15,33,16,26,17,43,18,34,19,35,20,30,28,6,47,28,48,36,49,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,
                2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,6,26,1,5,19,2,37,21,5,19,1,32,22,1,32,23,1,32,24,1,32,25,1,32,26,1,32,
                27,1,28,1,14,29,3,38,30,18,35,6,40,1,6,31,1,39,32,3,40,33,41,32,9,34,2,40,33,41,32,1,18,1,6,36,1,39,37,3,40,38,41,37,9,39,2,40,38,41,37,
                1,31,1,32,41,2,32,42,9,27,2,32,43,9,27,2,32,44,9,27,2,32,45,9,27,2,32,46,9,27,1,9,27,3,1,51,6,2,1,4,18,18,1,23,1,19,1,20,1,3,1,28,1,14,
                1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,45,1,9,1,17,1,27,13,23,1,24,13,42,14,37,15,33,16,26,18,43,19,34,20,35,21,
                30,29,6,48,28,49,36,50,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,
                9,2,1,9,2,3,3,1,33,17,3,26,1,5,20,2,37,22,5,20,1,32,23,1,32,24,1,32,25,1,32,26,1,32,27,1,32,28,1,28,1,14,30,3,38,31,18,36,6,41,1,6,32,
                1,39,33,3,40,34,41,33,9,35,2,40,34,41,33,1,18,1,6,37,1,39,38,3,40,39,41,38,9,40,2,40,39,41,38,1,31,1,32,42,2,32,43,9,28,2,32,44,9,28,2,
                32,45,9,28,2,32,46,9,28,2,32,47,9,28,1,9,28,3,1,3,2,9,1,21,1,10,2,25,1,9,2,2,1,46,6,2,1,4,18,10,1,23,1,24,1,3,1,1,1,1,2,12,1,7,1,7,1,7,
                1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,35,1,17,1,27,9,23,1,24,13,44,14,33,15,34,16,35,17,30,25,28,44,36,45,2,29,2,30,4,3,29,2,23,3,30,4,1,39,
                2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,3,26,1,5,16,2,37,18,5,16,1,32,19,1,32,20,1,32,
                21,1,32,22,1,32,23,1,32,24,1,28,1,14,26,3,38,27,18,32,6,37,1,6,28,1,39,29,3,40,30,41,29,9,31,2,40,30,41,29,1,18,1,6,33,1,39,34,3,40,35,
                41,34,9,36,2,40,35,41,34,1,31,1,32,38,2,32,39,9,24,2,32,40,9,24,2,32,41,9,24,2,32,42,9,24,2,32,43,9,24,1,9,24,2,1,2,2,5,1,10,1,9,1,1,1,
                3,2,9,1,17,1,10,2,28,1,9,2,2,1,23,6,2,1,4,18,55,1,23,1,19,1,20,1,21,1,18,1,1,1,22,1,9,1,17,1,10,11,23,1,24,13,42,14,37,15,25,16,43,17,
                4,18,27,19,6,20,28,21,9,22,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,
                32,12,9,2,1,9,2,5,3,1,5,18,4,1,50,6,2,1,4,18,16,1,23,1,24,1,19,1,20,1,3,1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,
                45,1,9,1,17,1,27,13,23,1,24,13,44,14,42,15,37,16,33,17,43,18,34,19,35,20,30,28,6,47,28,48,36,49,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,
                2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,2,32,11,9,2,2,32,12,9,2,1,9,2,6,26,1,5,19,2,37,21,5,19,1,32,22,1,32,23,1,32,24,1,
                32,25,1,32,26,1,32,27,1,28,1,14,29,3,38,30,18,35,6,40,1,6,31,1,39,32,3,40,33,41,32,9,34,2,40,33,41,32,1,18,1,6,36,1,39,37,3,40,38,41,37,
                9,39,2,40,38,41,37,1,31,1,32,41,2,32,42,9,27,2,32,43,9,27,2,32,44,9,27,2,32,45,9,27,2,32,46,9,27,1,9,27,3,1,51,6,2,1,4,18,18,1,23,1,24,
                1,19,1,20,1,3,1,28,1,18,1,1,1,1,2,12,1,7,1,7,1,7,1,7,1,7,1,7,12,2,1,5,8,2,1,6,14,45,1,9,1,17,1,27,13,23,1,24,13,44,14,42,15,37,16,33,17,
                43,19,34,20,35,21,30,29,6,48,28,49,36,50,2,29,2,30,4,3,29,2,23,3,30,4,1,39,2,31,2,14,5,1,6,6,1,32,7,2,32,8,9,2,2,32,9,9,2,2,32,10,9,2,
                2,32,11,9,2,2,32,12,9,2,1,9,2,4,3,1,33,18,2,26,1,5,20,2,37,22,5,20,1,32,23,1,32,24,1,32,25,1,32,26,1,32,27,1,32,28,1,28,1,14,30,3,38,31,
                18,36,6,41,1,6,32,1,39,33,3,40,34,41,33,9,35,2,40,34,41,33,1,18,1,6,37,1,39,38,3,40,39,41,38,9,40,2,40,39,41,38,1,31,1,32,42,2,32,43,9,
                28,2,32,44,9,28,2,32,45,9,28,2,32,46,9,28,2,32,47,9,28,1,9,28,3,2,12,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,1,1,1,2,2,48,1,11,49,1,2,49,2,42,
                9,3,50,2,51,1,6,49,3,4,52,2,51,1,50,49,3,42,4,4,42,5,51,6,52,4,49,11,3,50,4,51,6,49,3,4,48,6,49,7,53,9,42,10,3,49,4,42,8,54,9,3,54,9,42,
                8,49,6,2,55,9,42,10,2,49,1,9,56,9,3,52,4,51,6,57,11,
            };
            
            return new CompactDfaReader(new BinReader(new CompressReader().Uncompress(bytes))).Read();
        }
        
        public static IParseTable CreateParseTable()
        {
            byte[] bytes = 
            {
                204,54,0,5,202,2,31,81,79,7,1,1,53,2,1,1,38,1,1,31,3,222,1,1,4,1,5,8,1,9,15,2,1,1,4,1,1,8,1,1,15,2,17,1,4,1,5,8,1,9,15,2,194,1,1,1,1,2,
                1,5,16,1,1,8,2,190,1,21,1,1,8,2,230,1,30,1,1,1,1,1,2,1,1,25,1,37,1,1,1,2,1,5,28,1,1,18,1,1,8,1,1,21,1,1,8,1,37,49,2,1,5,1,1,1,8,1,45,21,
                1,1,2,1,5,4,1,9,4,1,82,2,1,82,3,3,13,17,21,8,1,1,2,1,1,4,1,1,4,1,1,2,1,1,3,3,1,1,1,8,1,1,1,5,5,9,13,17,21,6,1,46,2,1,46,5,1,25,2,2,46,
                29,4,1,1,1,5,1,1,1,1,1,6,1,1,2,1,1,5,1,1,2,2,1,1,17,1,1,30,1,1,2,1,1,14,1,1,2,1,1,4,1,1,4,1,1,2,10,1,184,2,188,2,192,2,1,1,1,8,1,1,2,1,
                1,4,1,1,4,1,1,2,7,1,1,1,1,1,1,1,8,2,188,1,2,2,192,1,4,2,196,1,4,1,1,2,1,1,3,6,200,1,204,1,208,1,8,1,1,2,1,5,4,1,9,13,1,21,8,2,148,1,2,
                2,152,1,4,2,156,1,7,1,1,3,7,160,1,164,1,168,1,1,7,1,1,1,5,1,1,1,1,1,1,1,1,4,1,1,2,4,1,1,1,1,2,1,1,2,2,1,1,17,1,1,2,1,1,8,2,232,2,5,1,1,
                1,5,1,1,1,1,1,1,2,208,2,4,1,1,2,7,1,212,2,216,2,220,2,2,1,1,2,2,1,1,31,1,1,3,2,172,1,1,10,176,1,180,1,184,1,188,1,192,1,6,1,1,2,1,1,5,
                2,196,1,2,3,1,200,1,4,1,1,1,5,1,1,1,1,1,1,1,1,4,1,1,2,4,1,1,1,1,2,1,1,2,3,1,1,33,3,1,1,1,5,1,1,1,1,1,1,1,1,4,1,1,2,4,1,1,1,1,2,1,1,2,3,
                1,1,21,3,2,228,1,1,10,232,1,236,1,240,1,244,1,248,1,9,1,1,5,3,252,1,1,1,3,1,128,2,4,1,1,1,5,5,9,13,17,21,37,1,1,2,2,208,4,37,1,1,23,1,
                1,6,1,1,7,1,1,2,1,1,4,1,1,7,1,1,3,4,1,1,1,1,7,1,1,2,1,1,4,1,1,7,11,1,216,4,220,4,224,4,1,1,1,1,7,1,1,2,1,1,4,1,1,7,8,1,1,1,1,1,1,1,1,7,
                2,160,3,2,2,164,3,4,2,168,3,7,1,1,3,7,172,3,176,3,180,3,1,20,1,1,2,2,176,4,14,2,132,3,1,10,136,3,140,3,144,3,148,3,152,3,6,1,1,2,1,1,5,
                2,156,3,3,2,160,3,5,1,1,32,1,1,2,1,5,24,1,1,1,5,1,1,1,1,1,1,1,1,7,4,1,1,1,1,2,2,1,1,1,2,1,1,20,1,1,6,1,1,1,2,164,5,5,1,1,1,5,1,1,1,1,1,
                9,1,1,5,2,1,1,1,2,1,1,4,1,1,1,5,1,1,1,1,1,1,2,140,5,7,7,1,144,5,148,5,152,5,2,2,1,1,1,2,1,1,4,2,188,3,1,10,192,3,196,3,200,3,204,3,208,
                3,9,1,1,5,3,212,3,1,1,3,1,216,3,4,1,1,1,5,1,1,1,1,1,1,1,1,7,4,1,1,1,1,2,2,1,1,1,3,1,1,33,3,1,1,1,5,1,1,1,1,1,1,1,1,7,4,1,1,1,1,2,2,1,1,
                1,3,1,1,21,3,2,220,4,2,2,224,4,4,3,228,4,1,6,1,1,3,6,232,4,236,4,240,4,8,1,1,2,1,1,4,2,1,1,6,1,1,3,3,1,1,1,24,2,136,7,6,1,1,7,1,1,1,5,
                1,1,1,1,1,1,1,1,4,1,1,2,4,1,1,1,1,2,1,1,3,1,1,4,1,1,1,5,1,1,1,1,1,6,1,1,2,1,1,5,1,1,3,1,1,4,1,1,1,5,1,1,1,1,1,1,2,156,6,4,1,1,2,7,1,160,
                6,164,6,168,6,2,1,1,3,1,1,4,2,220,4,1,10,224,4,228,4,232,4,236,4,240,4,6,1,1,2,1,1,5,2,244,4,3,2,248,4,4,1,1,1,5,1,1,1,1,1,1,1,1,4,1,1,
                2,4,1,1,1,1,2,1,1,3,2,1,33,3,1,1,1,5,1,1,1,1,1,1,1,1,4,1,1,2,4,1,1,1,1,2,1,1,3,2,1,21,12,1,1,10,2,244,4,26,2,232,6,6,1,1,7,2,188,5,1,10,
                192,5,196,5,200,5,204,5,208,5,9,1,1,5,3,212,5,1,2,2,216,5,13,1,1,30,1,1,6,1,1,14,1,1,2,1,1,4,2,1,1,6,10,1,172,8,176,8,180,8,1,1,1,8,1,
                1,2,1,1,4,2,1,1,6,7,1,1,1,1,1,1,1,8,2,232,6,2,2,236,6,4,3,240,6,1,6,1,1,3,6,244,6,248,6,252,6,8,1,1,1,5,1,1,1,1,1,1,1,1,7,4,1,1,1,1,2,
                2,1,1,2,1,1,4,1,1,1,5,1,1,1,1,1,9,1,1,5,2,1,1,2,1,1,4,1,1,1,5,1,1,1,1,1,1,2,140,8,7,7,1,144,8,148,8,152,8,2,2,1,1,2,1,1,4,2,148,7,1,10,
                152,7,156,7,160,7,164,7,168,7,9,1,1,5,3,172,7,1,2,2,176,7,4,1,1,1,5,1,1,1,1,1,1,1,1,7,4,1,1,1,1,2,2,1,1,2,2,1,33,3,1,1,1,5,1,1,1,1,1,1,
                1,1,7,4,1,1,1,1,2,2,1,1,2,2,1,21,12,1,1,6,2,180,9,14,3,55,1,5,100,2,1,5,1,1,9,15,1,13,16,1,17,13,2,29,1,1,1,5,15,1,9,32,1,1,34,1,5,16,
                1,1,33,1,5,31,1,1,22,1,5,8,1,1,51,1,1,84,1,1,30,1,1,73,1,1,10,14,1,5,9,13,17,21,25,29,33,37,41,45,49,53,22,1,57,26,1,1,2,9,5,9,13,17,21,
                25,29,33,37,1,5,41,45,49,53,57,10,1,61,43,1,1,17,12,197,1,1,5,9,13,17,21,25,29,33,37,46,5,177,1,1,5,9,46,5,181,1,1,5,9,76,1,1,34,1,1,37,
                1,1,6,6,141,2,25,29,33,37,1,5,41,45,49,53,57,32,1,1,14,4,241,2,53,57,20,14,197,3,1,5,9,13,17,21,25,29,33,37,41,45,22,1,49,50,1,1,15,12,
                129,2,1,5,9,13,17,21,25,29,33,37,46,5,237,1,1,5,9,46,5,241,1,1,5,9,36,15,157,2,1,5,9,13,17,21,25,29,33,37,41,45,49,22,1,53,26,1,1,3,9,
                185,3,13,17,21,25,29,33,37,1,5,41,45,49,53,57,10,1,61,21,1,1,5,6,5,9,13,17,21,25,1,5,29,33,37,41,45,10,1,49,38,1,1,32,1,1,6,6,185,2,25,
                29,33,37,1,5,41,45,49,53,57,32,1,1,2,10,189,2,9,13,17,21,25,29,33,37,1,5,41,45,49,53,57,10,1,61,21,1,1,14,4,193,2,53,57,20,14,161,5,1,
                5,9,13,17,21,25,29,33,37,41,45,22,1,49,14,14,153,4,1,5,9,13,17,21,25,29,33,37,41,45,22,1,49,26,1,1,3,9,189,5,13,17,21,25,29,33,37,1,5,
                41,45,49,53,57,10,1,61,21,1,1,6,6,157,2,13,17,21,25,1,5,29,33,37,41,45,32,1,1,2,10,205,3,9,13,17,21,25,29,33,37,1,5,41,45,49,53,57,10,
                1,61,21,1,1,14,4,165,2,41,45,61,1,1,20,1,1,3,9,225,3,13,17,21,25,29,33,37,1,5,41,45,49,53,57,10,1,61,11,12,141,2,1,5,9,13,17,21,25,29,
                33,37,46,5,249,1,1,5,9,46,5,253,1,1,5,9,36,15,241,5,1,5,9,13,17,21,25,29,33,37,41,45,49,22,1,53,14,14,241,5,1,5,9,13,17,21,25,29,33,37,
                41,45,22,1,49,13,15,177,2,1,5,9,13,17,21,25,29,33,37,41,45,49,22,1,53,26,1,1,3,9,157,5,13,17,21,25,29,33,37,1,5,41,45,49,53,57,10,1,61,
                21,1,1,6,6,213,1,13,17,21,25,1,5,29,33,37,41,45,32,1,1,2,10,189,5,9,13,17,21,25,29,33,37,1,5,41,45,49,53,57,10,1,61,21,1,1,14,4,221,1,
                41,45,20,14,253,2,1,5,9,13,17,21,25,29,33,37,41,45,22,1,49,14,14,169,3,1,5,9,13,17,21,25,29,33,37,41,45,22,1,49,13,15,177,3,1,5,9,13,17,
                21,25,29,33,37,41,45,49,22,1,53,6,1,13,1,1,5,2,1,1,1,3,1,6,1,1,3,1,17,2,1,3,1,21,3,1,8,1,45,4,25,2,134,2,5,1,3,1,14,5,1,3,1,18,5,1,3,1,
                22,5,1,7,1,45,6,29,3,65,3,1,3,1,69,3,1,3,1,73,3,1,4,1,130,2,5,1,3,1,10,1,1,16,1,85,7,77,4,101,8,93,5,113,9,105,6,146,2,10,1,7,1,85,11,
                117,7,125,12,1,4,1,129,1,12,1,4,1,158,2,13,1,15,1,101,14,133,1,8,145,1,15,141,1,9,210,2,13,1,15,1,113,16,153,1,10,165,1,15,161,1,11,142,
                2,10,1,3,1,26,5,1,4,1,173,1,2,1,4,1,177,1,2,1,4,1,154,2,13,1,3,1,38,5,1,10,1,241,1,17,181,1,12,166,2,18,1,4,1,170,2,18,1,4,1,206,2,13,
                1,4,1,134,1,5,1,10,1,201,2,19,137,2,13,218,2,20,1,4,1,222,2,20,1,4,1,233,2,21,1,4,1,237,2,21,1,4,1,241,2,21,1,9,1,182,2,22,245,2,14,50,
                22,1,4,1,190,2,18,1,3,1,58,18,1,3,1,62,18,1,3,1,66,18,1,3,1,70,23,1,3,1,86,24,1,3,1,90,24,1,3,1,94,24,1,3,1,106,24,1,3,1,114,24,1,3,1,
                122,24,1,9,1,54,25,197,1,15,130,1,24,1,3,1,126,24,1,4,1,141,3,2,1,22,1,241,1,26,225,1,16,241,1,26,225,1,17,194,2,27,153,3,12,242,1,28,
                1,4,1,237,3,21,1,10,1,234,2,22,241,3,18,150,1,22,1,4,1,146,1,29,1,4,1,242,2,20,1,4,1,162,1,20,1,4,1,166,1,20,1,4,1,170,1,20,1,4,1,174,
                1,20,1,10,1,178,1,30,253,3,19,206,1,28,1,4,1,202,1,28,1,4,1,226,1,28,1,4,1,145,4,31,1,10,1,158,1,32,137,2,20,130,1,28,1,4,1,218,1,28,1,
                4,1,222,1,33,1,4,1,234,1,28,1,4,1,238,1,28,1,4,1,230,1,34,1,15,1,246,2,35,153,4,13,201,2,36,137,2,21,30,10,1,3,1,34,10,1,3,1,42,13,1,3,
                1,46,37,1,9,1,241,1,17,189,1,22,74,18,1,3,1,78,18,1,3,1,82,18,1,4,1,186,2,18,1,9,1,137,5,15,133,5,23,98,24,1,3,1,102,24,1,4,1,145,5,38,
                1,9,1,182,2,39,149,5,14,50,39,1,4,1,190,2,40,1,3,1,58,40,1,3,1,62,40,1,3,1,66,40,1,3,1,70,41,1,3,1,86,42,1,3,1,90,42,1,3,1,94,42,1,3,1,
                106,42,1,3,1,114,42,1,3,1,122,42,1,9,1,54,43,169,3,24,130,1,42,1,3,1,126,42,1,4,1,173,5,2,1,22,1,213,3,26,197,3,25,213,3,26,197,3,26,194,
                2,27,157,3,27,138,1,13,1,4,1,142,1,44,1,16,1,201,2,19,137,2,28,246,2,45,197,5,29,194,1,20,1,4,1,153,6,46,1,4,1,182,1,20,1,4,1,186,1,20,
                1,4,1,190,1,20,1,10,1,161,6,47,157,6,30,238,2,20,1,4,1,242,1,48,1,4,1,169,6,38,1,10,1,234,2,39,173,6,18,150,1,39,1,4,1,146,1,49,1,4,1,
                242,2,50,1,4,1,162,1,50,1,4,1,166,1,50,1,4,1,170,1,50,1,4,1,174,1,50,1,10,1,178,1,51,185,6,19,206,1,48,1,4,1,202,1,48,1,4,1,226,1,48,1,
                4,1,205,6,31,1,10,1,158,1,52,153,4,31,130,1,48,1,4,1,218,1,48,1,4,1,222,1,53,1,4,1,234,1,48,1,4,1,238,1,48,1,4,1,230,1,54,1,16,1,246,2,
                35,153,4,32,217,4,36,153,4,33,214,1,28,1,10,1,241,1,17,189,1,34,178,2,22,1,10,1,194,2,55,225,6,12,198,2,56,1,4,1,202,2,56,1,3,1,110,24,
                1,3,1,46,57,1,9,1,194,2,27,161,3,35,74,40,1,3,1,78,40,1,3,1,82,40,1,4,1,186,2,40,1,9,1,137,5,15,189,7,23,98,42,1,3,1,102,42,1,4,1,193,
                7,38,1,10,1,201,2,19,137,2,36,230,2,22,1,4,1,242,1,58,1,4,1,154,1,22,1,4,1,242,2,59,1,4,1,162,1,59,1,4,1,166,1,59,1,4,1,170,1,59,1,4,1,
                174,1,59,1,10,1,178,1,60,201,7,19,206,1,58,1,4,1,202,1,58,1,4,1,226,1,58,1,4,1,221,7,31,1,10,1,158,1,61,197,5,37,130,1,58,1,4,1,218,1,
                58,1,4,1,222,1,62,1,4,1,234,1,58,1,4,1,238,1,58,1,4,1,230,1,63,1,22,1,246,2,35,153,4,38,249,5,36,197,5,39,254,2,64,237,7,40,246,1,28,1,
                4,1,254,1,28,1,4,1,250,1,28,1,4,1,210,1,28,1,4,1,142,1,65,1,16,1,246,2,35,153,4,41,246,2,66,253,7,29,194,1,50,1,4,1,209,8,46,1,4,1,182,
                1,50,1,4,1,186,1,50,1,4,1,190,1,50,1,10,1,217,8,47,213,8,30,238,2,50,1,4,1,225,8,38,1,4,1,214,1,48,1,4,1,174,2,22,1,4,1,229,8,67,1,9,1,
                182,2,68,233,8,14,50,68,1,4,1,190,2,56,1,3,1,58,56,1,3,1,62,56,1,3,1,66,56,1,3,1,70,69,1,3,1,86,70,1,3,1,90,70,1,3,1,94,70,1,3,1,106,70,
                1,3,1,114,70,1,3,1,122,70,1,9,1,54,71,241,6,42,130,1,70,1,3,1,126,70,1,4,1,129,9,2,1,28,1,157,7,26,141,7,43,157,7,26,141,7,44,194,2,27,
                157,3,45,194,2,27,161,3,46,178,2,39,1,9,1,194,2,55,229,6,47,110,42,1,4,1,226,2,22,1,4,1,194,1,59,1,4,1,153,9,46,1,4,1,182,1,59,1,4,1,186,
                1,59,1,4,1,190,1,59,1,10,1,161,9,47,157,9,30,238,2,59,1,4,1,169,9,38,1,4,1,214,1,58,1,4,1,173,9,67,1,4,1,177,9,46,1,10,1,246,2,35,153,
                4,48,230,2,39,1,4,1,242,1,72,1,4,1,154,1,39,1,4,1,242,2,73,1,4,1,162,1,73,1,4,1,166,1,73,1,4,1,170,1,73,1,4,1,174,1,73,1,10,1,178,1,74,
                185,9,19,206,1,72,1,4,1,202,1,72,1,4,1,226,1,72,1,4,1,205,9,31,1,10,1,158,1,75,253,7,49,130,1,72,1,4,1,218,1,72,1,4,1,222,1,76,1,4,1,234,
                1,72,1,4,1,238,1,72,1,4,1,230,1,77,1,22,1,246,2,35,153,4,50,177,8,36,253,7,51,254,2,64,221,9,40,246,1,48,1,4,1,254,1,48,1,4,1,250,1,48,
                1,4,1,210,1,48,1,3,1,118,24,1,3,1,46,78,1,9,1,194,2,55,233,6,52,74,56,1,3,1,78,56,1,3,1,82,56,1,4,1,186,2,56,1,9,1,137,5,15,233,9,23,98,
                70,1,3,1,102,70,1,4,1,237,9,38,1,4,1,174,2,39,1,4,1,241,9,67,1,10,1,254,2,64,245,9,40,246,1,58,1,4,1,254,1,58,1,4,1,250,1,58,1,4,1,210,
                1,58,1,4,1,198,1,20,1,4,1,250,2,67,1,4,1,226,2,39,1,4,1,194,1,73,1,4,1,249,9,46,1,4,1,182,1,73,1,4,1,186,1,73,1,4,1,190,1,73,1,10,1,129,
                10,47,253,9,30,238,2,73,1,4,1,137,10,38,1,4,1,214,1,72,1,4,1,141,10,67,1,10,1,194,2,55,233,6,53,178,2,68,1,9,1,194,2,55,229,6,54,110,70,
                1,3,1,118,42,1,4,1,153,10,67,1,10,1,254,2,64,157,10,40,246,1,72,1,4,1,254,1,72,1,4,1,250,1,72,1,4,1,210,1,72,1,4,1,198,1,50,1,4,1,174,
                2,68,1,4,1,161,10,67,1,4,1,198,1,59,1,4,1,165,10,67,1,3,1,118,70,1,4,1,198,1,73,1,1,1,
            };
            
            return new CompactTableReader(new BinReader(new CompressReader().Uncompress(bytes))).Read();
        }
        
        public static readonly TerminalSymbol identifier = new TerminalSymbol(0, "identifier", true, "");
        public static readonly TerminalSymbol number = new TerminalSymbol(1, "number", true, "");
        public static readonly TerminalSymbol any = new TerminalSymbol(2, "any", true, "");
        public static readonly TerminalSymbol text = new TerminalSymbol(3, "text", true, "");
        public static readonly TerminalSymbol ucBlock = new TerminalSymbol(4, "ucBlock", true, "");
        public static readonly TerminalSymbol ucCategory = new TerminalSymbol(5, "ucCategory", true, "");
        public static readonly TerminalSymbol ucCodepoint = new TerminalSymbol(6, "ucCodepoint", true, "");
        public static readonly TerminalSymbol __T1 = new TerminalSymbol(7, "__T1", false, "grammar");
        public static readonly TerminalSymbol __T2 = new TerminalSymbol(8, "__T2", false, "{");
        public static readonly TerminalSymbol __T3 = new TerminalSymbol(9, "__T3", false, "}");
        public static readonly TerminalSymbol __T4 = new TerminalSymbol(10, "__T4", false, "options");
        public static readonly TerminalSymbol __T5 = new TerminalSymbol(11, "__T5", true, "Start");
        public static readonly TerminalSymbol __T6 = new TerminalSymbol(12, "__T6", false, "=");
        public static readonly TerminalSymbol __T7 = new TerminalSymbol(13, "__T7", false, ";");
        public static readonly TerminalSymbol __T8 = new TerminalSymbol(14, "__T8", true, "Spacing");
        public static readonly TerminalSymbol __T9 = new TerminalSymbol(15, "__T9", false, "rules");
        public static readonly TerminalSymbol __T10 = new TerminalSymbol(16, "__T10", true, "|");
        public static readonly TerminalSymbol __T11 = new TerminalSymbol(17, "__T11", true, "?");
        public static readonly TerminalSymbol __T12 = new TerminalSymbol(18, "__T12", true, "*");
        public static readonly TerminalSymbol __T13 = new TerminalSymbol(19, "__T13", true, "+");
        public static readonly TerminalSymbol __T14 = new TerminalSymbol(20, "__T14", false, ",");
        public static readonly TerminalSymbol __T15 = new TerminalSymbol(21, "__T15", false, "^");
        public static readonly TerminalSymbol __T16 = new TerminalSymbol(22, "__T16", false, "(");
        public static readonly TerminalSymbol __T17 = new TerminalSymbol(23, "__T17", false, ")");
        public static readonly TerminalSymbol __T18 = new TerminalSymbol(24, "__T18", false, "terminals");
        public static readonly TerminalSymbol __T19 = new TerminalSymbol(25, "__T19", false, "-");
        public static readonly TerminalSymbol __T20 = new TerminalSymbol(26, "__T20", false, "~");
        public static readonly TerminalSymbol __T21 = new TerminalSymbol(27, "__T21", false, "..");
        public static readonly TerminalSymbol __T22 = new TerminalSymbol(28, "__T22", true, ":");
        public static readonly TerminalSymbol __T23 = new TerminalSymbol(29, "__T23", true, "->");
        public static readonly TerminalSymbol __eof = new TerminalSymbol(30, "__eof", false, "$eof$");
        public static readonly NonterminalSymbol file = new NonterminalSymbol(31, "file", false, RepeatKind.None);
        public static readonly NonterminalSymbol grammar = new NonterminalSymbol(32, "grammar", false, RepeatKind.None);
        public static readonly NonterminalSymbol grammar_item = new NonterminalSymbol(33, "grammar_item", false, RepeatKind.None);
        public static readonly NonterminalSymbol grammar_options = new NonterminalSymbol(34, "grammar_options", false, RepeatKind.None);
        public static readonly NonterminalSymbol option = new NonterminalSymbol(35, "option", false, RepeatKind.None);
        public static readonly NonterminalSymbol grammar_rules = new NonterminalSymbol(36, "grammar_rules", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule = new NonterminalSymbol(37, "rule", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_expression = new NonterminalSymbol(38, "rule_expression", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_alternative = new NonterminalSymbol(39, "rule_alternative", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_sequence = new NonterminalSymbol(40, "rule_sequence", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_repetition = new NonterminalSymbol(41, "rule_repetition", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_option = new NonterminalSymbol(42, "rule_option", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_star = new NonterminalSymbol(43, "rule_star", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_plus = new NonterminalSymbol(44, "rule_plus", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_tree_action = new NonterminalSymbol(45, "rule_tree_action", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_drop_element = new NonterminalSymbol(46, "rule_drop_element", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_promote_element = new NonterminalSymbol(47, "rule_promote_element", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_element = new NonterminalSymbol(48, "rule_element", false, RepeatKind.None);
        public static readonly NonterminalSymbol sub_rule = new NonterminalSymbol(49, "sub_rule", false, RepeatKind.None);
        public static readonly NonterminalSymbol rule_atom = new NonterminalSymbol(50, "rule_atom", false, RepeatKind.None);
        public static readonly NonterminalSymbol reference = new NonterminalSymbol(51, "reference", false, RepeatKind.None);
        public static readonly NonterminalSymbol grammar_terminals = new NonterminalSymbol(52, "grammar_terminals", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_rule = new NonterminalSymbol(53, "terminal_rule", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_expression = new NonterminalSymbol(54, "terminal_expression", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_alternative = new NonterminalSymbol(55, "terminal_alternative", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_diff = new NonterminalSymbol(56, "terminal_diff", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_sequence = new NonterminalSymbol(57, "terminal_sequence", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_repetition = new NonterminalSymbol(58, "terminal_repetition", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_option = new NonterminalSymbol(59, "terminal_option", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_star = new NonterminalSymbol(60, "terminal_star", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_plus = new NonterminalSymbol(61, "terminal_plus", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_range_loop = new NonterminalSymbol(62, "terminal_range_loop", false, RepeatKind.None);
        public static readonly NonterminalSymbol range = new NonterminalSymbol(63, "range", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_element = new NonterminalSymbol(64, "terminal_element", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_not = new NonterminalSymbol(65, "terminal_not", false, RepeatKind.None);
        public static readonly NonterminalSymbol terminal_atom = new NonterminalSymbol(66, "terminal_atom", false, RepeatKind.None);
        public static readonly NonterminalSymbol characterRange = new NonterminalSymbol(67, "characterRange", false, RepeatKind.None);
        public static readonly NonterminalSymbol character = new NonterminalSymbol(68, "character", false, RepeatKind.None);
        public static readonly NonterminalSymbol __N1 = new NonterminalSymbol(69, "__N1", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N2 = new NonterminalSymbol(70, "__N2", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N3 = new NonterminalSymbol(71, "__N3", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N4 = new NonterminalSymbol(72, "__N4", false, RepeatKind.None);
        public static readonly NonterminalSymbol __N5 = new NonterminalSymbol(73, "__N5", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N6 = new NonterminalSymbol(74, "__N6", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N7 = new NonterminalSymbol(75, "__N7", false, RepeatKind.None);
        public static readonly NonterminalSymbol __N8 = new NonterminalSymbol(76, "__N8", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N9 = new NonterminalSymbol(77, "__N9", false, RepeatKind.None);
        public static readonly NonterminalSymbol __N10 = new NonterminalSymbol(78, "__N10", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N11 = new NonterminalSymbol(79, "__N11", false, RepeatKind.Star);
        public static readonly NonterminalSymbol __N12 = new NonterminalSymbol(80, "__N12", false, RepeatKind.Optional);
        public static readonly TerminalSymbol newline = new TerminalSymbol(81, "newline", false, "");
        public static readonly TerminalSymbol newlineChar = new TerminalSymbol(82, "newlineChar", false, "");
        public static readonly TerminalSymbol whitespace = new TerminalSymbol(83, "whitespace", false, "");
        public static readonly TerminalSymbol lineComment = new TerminalSymbol(84, "lineComment", false, "");
        public static readonly TerminalSymbol blockComment = new TerminalSymbol(85, "blockComment", false, "");
        public static readonly TerminalSymbol spacing = new TerminalSymbol(86, "spacing", false, "");
        public static readonly TerminalSymbol identifierStart = new TerminalSymbol(87, "identifierStart", false, "");
        public static readonly TerminalSymbol identifierContinue = new TerminalSymbol(88, "identifierContinue", false, "");
        public static readonly TerminalSymbol digit = new TerminalSymbol(89, "digit", false, "");
        public static readonly TerminalSymbol nonzeroDigit = new TerminalSymbol(90, "nonzeroDigit", false, "");
        public static readonly TerminalSymbol zero = new TerminalSymbol(91, "zero", false, "");
        public static readonly TerminalSymbol hexDigit = new TerminalSymbol(92, "hexDigit", false, "");
        public static readonly TerminalSymbol escapes = new TerminalSymbol(93, "escapes", false, "");
        public static readonly TerminalSymbol ucNameStart = new TerminalSymbol(94, "ucNameStart", false, "");
        public static readonly TerminalSymbol ucNameInner = new TerminalSymbol(95, "ucNameInner", false, "");
        public static readonly TerminalSymbol ucNameEnd = new TerminalSymbol(96, "ucNameEnd", false, "");
        public static readonly TerminalSymbol ucName = new TerminalSymbol(97, "ucName", false, "");
        public static readonly NonterminalSymbol __acc = new NonterminalSymbol(98, "__acc", true, RepeatKind.None);
        
        private static readonly Symbol[] symbols = 
        {
            identifier,number,any,text,ucBlock,ucCategory,ucCodepoint,__T1,__T2,__T3,__T4,__T5,__T6,__T7,__T8,__T9,__T10,__T11,__T12,__T13,__T14,__T15,
            __T16,__T17,__T18,__T19,__T20,__T21,__T22,__T23,__eof,file,grammar,grammar_item,grammar_options,option,grammar_rules,rule,rule_expression,
            rule_alternative,rule_sequence,rule_repetition,rule_option,rule_star,rule_plus,rule_tree_action,rule_drop_element,rule_promote_element,rule_element,
            sub_rule,rule_atom,reference,grammar_terminals,terminal_rule,terminal_expression,terminal_alternative,terminal_diff,terminal_sequence,terminal_repetition,
            terminal_option,terminal_star,terminal_plus,terminal_range_loop,range,terminal_element,terminal_not,terminal_atom,characterRange,character,
            __N1,__N2,__N3,__N4,__N5,__N6,__N7,__N8,__N9,__N10,__N11,__N12,newline,newlineChar,whitespace,lineComment,blockComment,spacing,identifierStart,
            identifierContinue,digit,nonzeroDigit,zero,hexDigit,escapes,ucNameStart,ucNameInner,ucNameEnd,ucName,__acc,
        };
        
        private static readonly Production[] productions = 
        {
            new Production(__acc, false, "__acc -> ^file", false),
            new Production(file, false, "file -> ^grammar", false),
            new Production(grammar, false, "grammar -> ,'grammar' ^ˈidentifierˈ ,'{' ^__N1 ,'}'", true, false, true, false, true),
            new Production(grammar_item, true, "grammar_item -> ^grammar_options", false),
            new Production(grammar_item, true, "grammar_item -> ^grammar_rules", false),
            new Production(grammar_item, true, "grammar_item -> ^grammar_terminals", false),
            new Production(grammar_options, false, "grammar_options -> ,'options' ,'{' ^__N2 ,'}'", true, true, false, true),
            new Production(option, false, "option -> ^'Start' ,'=' ^ˈidentifierˈ ,';'", false, true, false, true),
            new Production(option, false, "option -> ^'Spacing' ,'=' ^ˈidentifierˈ ,';'", false, true, false, true),
            new Production(grammar_rules, false, "grammar_rules -> ,'rules' ,'{' ^__N3 ,'}'", true, true, false, true),
            new Production(rule, false, "rule -> ^ˈidentifierˈ ,__N4 ^rule_expression ,';'", false, true, false, true),
            new Production(rule_expression, false, "rule_expression -> ^rule_alternative ^__N5", false, false),
            new Production(rule_alternative, true, "rule_alternative -> ^rule_sequence", false),
            new Production(rule_sequence, false, "rule_sequence -> ^__N6", false),
            new Production(rule_repetition, true, "rule_repetition -> ^rule_option", false),
            new Production(rule_repetition, true, "rule_repetition -> ^rule_star", false),
            new Production(rule_repetition, true, "rule_repetition -> ^rule_plus", false),
            new Production(rule_repetition, true, "rule_repetition -> ^rule_tree_action", false),
            new Production(rule_option, false, "rule_option -> ^rule_tree_action ,'?'", false, true),
            new Production(rule_star, false, "rule_star -> ^rule_tree_action ,'*'", false, true),
            new Production(rule_plus, false, "rule_plus -> ^rule_tree_action ,'+'", false, true),
            new Production(rule_tree_action, true, "rule_tree_action -> ^rule_drop_element", false),
            new Production(rule_tree_action, true, "rule_tree_action -> ^rule_promote_element", false),
            new Production(rule_tree_action, true, "rule_tree_action -> ^rule_element", false),
            new Production(rule_drop_element, false, "rule_drop_element -> ,',' ^rule_element", true, false),
            new Production(rule_promote_element, false, "rule_promote_element -> ,'^' ^rule_element", true, false),
            new Production(rule_element, true, "rule_element -> ^sub_rule", false),
            new Production(rule_element, true, "rule_element -> ,'(' ^rule_expression ,')'", true, false, true),
            new Production(rule_element, true, "rule_element -> ^rule_atom", false),
            new Production(sub_rule, false, "sub_rule -> ,'{' ^ˈidentifierˈ ,__N7 ^rule_expression ,'}'", true, false, true, false, true),
            new Production(rule_atom, true, "rule_atom -> ^reference", false),
            new Production(rule_atom, true, "rule_atom -> ^ˈtextˈ", false),
            new Production(reference, true, "reference -> ^ˈidentifierˈ", false),
            new Production(grammar_terminals, false, "grammar_terminals -> ,'terminals' ,'{' ^__N8 ,'}'", true, true, false, true),
            new Production(terminal_rule, false, "terminal_rule -> ^ˈidentifierˈ ,__N9 ^terminal_expression ,';'", false, true, false, true),
            new Production(terminal_expression, false, "terminal_expression -> ^terminal_alternative ^__N10", false, false),
            new Production(terminal_alternative, true, "terminal_alternative -> ^terminal_sequence", false),
            new Production(terminal_alternative, true, "terminal_alternative -> ^terminal_diff", false),
            new Production(terminal_diff, false, "terminal_diff -> ^terminal_sequence ,'-' ^terminal_sequence", false, true, false),
            new Production(terminal_sequence, false, "terminal_sequence -> ^__N11", false),
            new Production(terminal_repetition, true, "terminal_repetition -> ^terminal_option", false),
            new Production(terminal_repetition, true, "terminal_repetition -> ^terminal_star", false),
            new Production(terminal_repetition, true, "terminal_repetition -> ^terminal_plus", false),
            new Production(terminal_repetition, true, "terminal_repetition -> ^terminal_range_loop", false),
            new Production(terminal_repetition, true, "terminal_repetition -> ^terminal_element", false),
            new Production(terminal_option, false, "terminal_option -> ^terminal_element ^'?'", false, false),
            new Production(terminal_star, false, "terminal_star -> ^terminal_element ^'*'", false, false),
            new Production(terminal_plus, false, "terminal_plus -> ^terminal_element ^'+'", false, false),
            new Production(terminal_range_loop, false, "terminal_range_loop -> ^terminal_element ^range", false, false),
            new Production(range, false, "range -> ,'{' ^ˈnumberˈ ^__N12 ,'}'", true, false, false, true),
            new Production(terminal_element, true, "terminal_element -> ^terminal_atom", false),
            new Production(terminal_element, true, "terminal_element -> ^terminal_not", false),
            new Production(terminal_element, true, "terminal_element -> ,'(' ^terminal_expression ,')'", true, false, true),
            new Production(terminal_not, false, "terminal_not -> ,'~' ^terminal_atom", true, false),
            new Production(terminal_atom, true, "terminal_atom -> ^ˈanyˈ", false),
            new Production(terminal_atom, true, "terminal_atom -> ^ˈtextˈ", false),
            new Production(terminal_atom, true, "terminal_atom -> ^characterRange", false),
            new Production(terminal_atom, true, "terminal_atom -> ^ˈucCodepointˈ", false),
            new Production(terminal_atom, true, "terminal_atom -> ^ˈucBlockˈ", false),
            new Production(terminal_atom, true, "terminal_atom -> ^ˈucCategoryˈ", false),
            new Production(terminal_atom, true, "terminal_atom -> ^reference", false),
            new Production(characterRange, false, "characterRange -> ^character ,'..' ^character", false, true, false),
            new Production(character, true, "character -> ^ˈucCodepointˈ", false),
            new Production(character, true, "character -> ^ˈtextˈ", false),
            new Production(__N1, false, "__N1 -> ^__N1 ^grammar_item", false, false),
            new Production(__N1, false, "__N1 -> ^grammar_item", false),
            new Production(__N1, false, "__N1 -> "),
            new Production(__N2, false, "__N2 -> ^__N2 ^option", false, false),
            new Production(__N2, false, "__N2 -> ^option", false),
            new Production(__N2, false, "__N2 -> "),
            new Production(__N3, false, "__N3 -> ^__N3 ^rule", false, false),
            new Production(__N3, false, "__N3 -> ^rule", false),
            new Production(__N3, false, "__N3 -> "),
            new Production(__N4, false, "__N4 -> ^':'", false),
            new Production(__N4, false, "__N4 -> ^'->'", false),
            new Production(__N5, false, "__N5 -> ^__N5 ^'|' ^rule_alternative", false, false, false),
            new Production(__N5, false, "__N5 -> ^'|' ^rule_alternative", false, false),
            new Production(__N5, false, "__N5 -> "),
            new Production(__N6, false, "__N6 -> ^__N6 ^rule_repetition", false, false),
            new Production(__N6, false, "__N6 -> ^rule_repetition", false),
            new Production(__N6, false, "__N6 -> "),
            new Production(__N7, false, "__N7 -> ^':'", false),
            new Production(__N7, false, "__N7 -> ^'->'", false),
            new Production(__N8, false, "__N8 -> ^__N8 ^terminal_rule", false, false),
            new Production(__N8, false, "__N8 -> ^terminal_rule", false),
            new Production(__N8, false, "__N8 -> "),
            new Production(__N9, false, "__N9 -> ^':'", false),
            new Production(__N9, false, "__N9 -> ^'->'", false),
            new Production(__N10, false, "__N10 -> ^__N10 ,'|' ^terminal_alternative", false, true, false),
            new Production(__N10, false, "__N10 -> ,'|' ^terminal_alternative", true, false),
            new Production(__N10, false, "__N10 -> "),
            new Production(__N11, false, "__N11 -> ^__N11 ^terminal_repetition", false, false),
            new Production(__N11, false, "__N11 -> ^terminal_repetition", false),
            new Production(__N11, false, "__N11 -> "),
            new Production(__N12, false, "__N12 -> ,',' ^ˈnumberˈ", true, false),
            new Production(__N12, false, "__N12 -> "),
        };
    }
}
