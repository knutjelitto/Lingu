start
    = _ grammar EOF
    ;

//grammar
//    = s:options r:rules
//    ;
//
//options
//    = s:option<0,,_>
//    ;
//
//options
//    = '@' _ id:identifier '=' _ v:optionValue
//    ;
//
//optionValue
//    = _ ids:identifier<1,,'.'_>
//    ;
//
//_ -memoize
//    = (whitespace / eol / comment)*
//    ;
//
//comment -memoize
//    = singleLineComment
//    / multiLineComment
//    ;
//
//singleLineComment -memoize -lexical
//    = "//" (!eolChar .)*
//    ;
//
//multiLineComment -lexical
//    = "/*" (!"*/" .)* "*/"
//    ;
//
//eol -memoize
//    = "\n"
//    / "\r\n"
//    / "\r"
//    / "\u{2028}"
//    / "\u{2029}"
//    ;

//eolChar
//    = [\n\r\u{2028}\u{2029}]
//    ;

//whitespace -memoize
//    = [ \t\v\f\u{00A0}\u{FEFF}\u{1680}\u{180E}\u{2000}-\u{200A}\u{202F}\u{205F}\u{3000}]
//    ;

eof
    = !.
    / unexpected:&. #error{ "PEG0008:" + string.Format(CultureInfo.CurrentCulture, Resources.PEG0008_ERROR_PARSER_UnexpectedEndOfInput, unexpected) }
    ;
